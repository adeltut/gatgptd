{
    "messages": [],
    "status": "OK",
    "data": {
        "sections": [
            {
                "elements": [
                    {
                        "split": "begin_split",
                        "title": null
                    },
                    {
                                                "options": []
                    },
                    {
                        "split": "end_split",
                        "title": null
                    }
                ],
                "index": 0,
                "name": "Default",
                "service_name": "Default"
            },
            {
                "elements": [
                    {
                        "split": "begin_split",
                        "title": null
                    },
                    {
                        "column_id": "155931135900001086",
                        "column_type": "choice",
                        "dependent_on_column": null,
                        "extra_attributes": null,
                        "index": 0,
                        "is_mandatory": false,
                        "name": "\u0421\u0442\u0430\u0442\u0443\u0441",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": {
                            "values": [
                                {
                                    "database_value": "-2",
                                    "display_value": "\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d",
                                    "order": 10
                                },
                                {
                                    "database_value": "1",
                                    "display_value": "\u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430",
                                    "order": 10
                                },
                                {
                                    "database_value": "0",
                                    "display_value": "\u041d\u0430\u0437\u043d\u0430\u0447\u0435\u043d",
                                    "order": 20
                                },
                                {
                                    "database_value": "-1",
                                    "display_value": "\u0410\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f",
                                    "order": 30
                                },
                                {
                                    "database_value": "2",
                                    "display_value": "\u0412 \u0440\u0430\u0431\u043e\u0442\u0435",
                                    "order": 40
                                },
                                {
                                    "database_value": "4",
                                    "display_value": "\u0422\u0440\u0435\u0431\u0443\u044e\u0442\u0441\u044f \u0443\u0442\u043e\u0447\u043d\u0435\u043d\u0438\u044f",
                                    "order": 40
                                },
                                {
                                    "database_value": "7",
                                    "display_value": "\u0417\u0430\u0432\u0435\u0440\u0448\u0435\u043d",
                                    "order": 50
                                },
                                {
                                    "database_value": "8",
                                    "display_value": "\u041e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c",
                                    "order": 60
                                },
                                {
                                    "database_value": "10",
                                    "display_value": "\u0417\u0430\u043a\u0440\u044b\u0442",
                                    "order": 70
                                },
                                {
                                    "database_value": "3",
                                    "display_value": "\u041e\u0442\u043b\u043e\u0436\u0435\u043d",
                                    "order": 80
                                },
                                {
                                    "database_value": "6",
                                    "display_value": "\u0412\u043d\u0435\u0448\u043d\u044f\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430",
                                    "order": 90
                                }
                            ]
                        },
                        "sys_column_name": "state",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.state",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": {
                            "database_value": "10",
                            "display_value": "\u0417\u0430\u043a\u0440\u044b\u0442"
                        },
                        "field_info": null
                    },
                    {
                        "split": "split",
                        "title": null
                    },
                    {
                        "column_id": "155931135900001087",
                        "column_type": "choice",
                        "dependent_on_column": null,
                        "extra_attributes": null,
                        "index": 1,
                        "is_mandatory": false,
                        "name": "\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442",
                        "read_only": false,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": {
                            "values": [
                                {
                                    "database_value": null,
                                    "display_value": "--\u041d\u0435\u0442--",
                                    "order": null
                                },
                                {
                                    "database_value": "1",
                                    "display_value": "\u041e\u0431\u044b\u0447\u043d\u044b\u0439",
                                    "order": 10
                                },
                                {
                                    "database_value": "2",
                                    "display_value": "\u0421\u0440\u0435\u0434\u043d\u0438\u0439",
                                    "order": 20
                                },
                                {
                                    "database_value": "3",
                                    "display_value": "\u0412\u044b\u0441\u043e\u043a\u0438\u0439",
                                    "order": 30
                                }
                            ]
                        },
                        "sys_column_name": "priority",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.priority",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": {
                            "database_value": "1",
                            "display_value": "\u041e\u0431\u044b\u0447\u043d\u044b\u0439"
                        },
                        "field_info": {
                            "hint": "",
                            "placeholder": "",
                            "help": "\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442 \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043f\u043e \u043c\u0430\u0442\u0440\u0438\u0446\u0435 \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0432\u043b\u0438\u044f\u043d\u0438\u044f \u0438 \u0441\u0440\u043e\u0447\u043d\u043e\u0441\u0442\u0438"
                        }
                    },
                    {
                        "column_id": "160026115013412828",
                        "column_type": "datetime",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 2,
                        "is_mandatory": false,
                        "name": "\u0412\u043e\u0437\u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b",
                        "read_only": false,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": [],
                        "sys_column_name": "resubmission",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.resubmission",
                        "validate": {
                            "format": "d.m.Y H:i:s",
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": {
                                "max_length_message": "",
                                "wrong_data_message": "\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 \u0434\u0430\u043d\u043d\u044b\u0445",
                                "pattern_message": "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0446\u0438\u0444\u0440\u044b"
                            }
                        },
                        "value": null,
                        "field_info": null
                    },
                    {
                        "column_id": "162607685313489265",
                        "column_type": "reference",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 3,
                        "is_mandatory": false,
                        "name": "\u0412\u043d\u0435\u0448\u043d\u044f\u044f \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u044f",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": {
                            "table_id": "156873094708847393",
                            "table_name": "org_company",
                            "dependency_map_link": null,
                            "reference_qualifier": {
                                "is_need_request": false,
                                "condition": "",
                                "is_fixed": false
                            },
                            "can_create": false,
                            "can_read": true
                        },
                        "sys_column_name": "external_company",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.external_company",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": null,
                        "field_info": null
                    },
                    {
                        "split": "end_split",
                        "title": null
                    },
                    {
                        "column_id": "162607671818533027",
                        "column_type": "text",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 4,
                        "is_mandatory": false,
                        "name": "\u0412\u043d\u0435\u0448\u043d\u044f\u044f \u0437\u0430\u0434\u0430\u0447\u0430",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": [],
                        "sys_column_name": "external_task",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.external_task",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": {
                                "max_length_message": "",
                                "wrong_data_message": "",
                                "pattern_message": ""
                            }
                        },
                        "value": "",
                        "field_info": null
                    },
                    {
                        "split": "begin_split",
                        "title": null
                    },
                    {
                        "column_id": "156943341303994936",
                        "column_type": "reference",
                        "dependent_on_column": null,
                        "extra_attributes": null,
                        "index": 5,
                        "is_mandatory": false,
                        "name": "\u041d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043e \u043d\u0430 \u0433\u0440\u0443\u043f\u043f\u0443",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": {
                            "table_id": "155931135900000025",
                            "table_name": "sys_group",
                            "dependency_map_link": null,
                            "reference_qualifier": {
                                "is_need_request": true,
                                "condition": "",
                                "is_fixed": true
                            },
                            "can_create": false,
                            "can_read": true
                        },
                        "sys_column_name": "assignment_group",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.assignment_group",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": {
                            "database_value": "171034684596964981",
                            "display_value": "\u0415\u0434\u0438\u043d\u0430\u044f \u0441\u043b\u0443\u0436\u0431\u0430 \u0442\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 (\u0415\u0421\u0422\u041f)",
                            "reference_state": null
                        },
                        "field_info": null
                    },
                    {
                        "split": "split",
                        "title": null
                    },
                    {
                        "column_id": "155931135900001080",
                        "column_type": "reference",
                        "dependent_on_column": null,
                        "extra_attributes": "show_delegates=true\ndelegation_type=tasks",
                        "index": 6,
                        "is_mandatory": false,
                        "name": "\u041a\u043e\u043c\u0443 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": {
                            "table_id": "155931135900000084",
                            "table_name": "user",
                            "dependency_map_link": null,
                            "reference_qualifier": {
                                "is_need_request": true,
                                "condition": "",
                                "is_fixed": true
                            },
                            "can_create": true,
                            "can_read": true
                        },
                        "sys_column_name": "assigned_user",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.assigned_user",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": {
                            "database_value": "172846283191882017",
                            "display_value": "\u0422\u0443\u0442\u0443\u043d\u0438\u043d \u0410\u0434\u0435\u043b\u044c (adel.tutunin@ranepa.ru)",
                            "reference_state": null
                        },
                        "field_info": null
                    },
                    {
                        "split": "end_split",
                        "title": null
                    },
                    {
                        "column_id": "156943341308746896",
                        "column_type": "text",
                        "dependent_on_column": null,
                        "extra_attributes": null,
                        "index": 7,
                        "is_mandatory": true,
                        "name": "\u0422\u0435\u043c\u0430",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": [],
                        "sys_column_name": "subject",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.subject",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": {
                                "max_length_message": "",
                                "wrong_data_message": "",
                                "pattern_message": ""
                            }
                        },
                        "value": "\u0422\u0435\u0441\u0442",
                        "field_info": null
                    },
                    {
                        "column_id": "155931135900001085",
                        "column_type": "text",
                        "dependent_on_column": null,
                        "extra_attributes": null,
                        "index": 8,
                        "is_mandatory": false,
                        "name": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": [],
                        "sys_column_name": "description",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.description",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": {
                                "max_length_message": "",
                                "wrong_data_message": "",
                                "pattern_message": ""
                            }
                        },
                        "value": "\u0422\u0435\u0441\u0442",
                        "field_info": null
                    },
                    {
                        "column_id": "156950436315967285",
                        "column_type": "list",
                        "dependent_on_column": null,
                        "extra_attributes": null,
                        "index": 9,
                        "is_mandatory": false,
                        "name": "\u0421\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u041a\u0415",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": {
                            "table_id": "156846397706052732",
                            "table_name": "sys_cmdb_ci",
                            "reference_qualifier": {
                                "is_need_request": false,
                                "condition": "(sys_db_table_id!=157233752019606969)",
                                "is_fixed": true
                            },
                            "dependency_map_link": null,
                            "can_create": false,
                            "can_read": true
                        },
                        "sys_column_name": "related_cis",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.related_cis",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": [],
                        "field_info": null
                    },
                    {
                        "split": "begin_split",
                        "title": null
                    },
                    {
                        "column_id": "156943341304220556",
                        "column_type": "reference",
                        "dependent_on_column": null,
                        "extra_attributes": null,
                        "index": 10,
                        "is_mandatory": true,
                        "name": "\u0417\u0430\u044f\u0432\u0438\u0442\u0435\u043b\u044c",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": {
                            "table_id": "156873090301469473",
                            "table_name": "employee",
                            "dependency_map_link": null,
                            "reference_qualifier": {
                                "is_need_request": false,
                                "condition": "",
                                "is_fixed": false
                            },
                            "can_create": true,
                            "can_read": true
                        },
                        "sys_column_name": "caller",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.caller",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": {
                            "database_value": "172984658095253097",
                            "display_value": "\u0422\u0443\u0442\u0443\u043d\u0438\u043d \u0410\u0434\u0435\u043b\u044c \u041e\u043b\u0435\u0433\u043e\u0432\u0438\u0447 (adtutuninicl@yandex.ru)",
                            "reference_state": null
                        },
                        "field_info": null
                    },
                    {
                        "split": "split",
                        "title": null
                    },
                    {
                        "column_id": "156943341307400069",
                        "column_type": "reference",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 11,
                        "is_mandatory": false,
                        "name": "\u041a\u043e\u043c\u043f\u0430\u043d\u0438\u044f",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": {
                            "table_id": "156873094708847393",
                            "table_name": "org_company",
                            "dependency_map_link": null,
                            "reference_qualifier": {
                                "is_need_request": false,
                                "condition": "",
                                "is_fixed": false
                            },
                            "can_create": false,
                            "can_read": true
                        },
                        "sys_column_name": "company",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.company",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": null,
                        "field_info": null
                    },
                    {
                        "split": "end_split",
                        "title": null
                    },
                    {
                        "split": "begin_split",
                        "title": null
                    },
                    {
                        "column_id": "156950466410629068",
                        "column_type": "choice",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 12,
                        "is_mandatory": true,
                        "name": "\u0422\u0438\u043f \u043a\u043e\u043d\u0442\u0430\u043a\u0442\u0430",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": {
                            "values": [
                                {
                                    "database_value": "10",
                                    "display_value": "\u0417\u0432\u043e\u043d\u043e\u043a",
                                    "order": 10
                                },
                                {
                                    "database_value": "20",
                                    "display_value": "\u041f\u043e\u0447\u0442\u0430",
                                    "order": 10
                                },
                                {
                                    "database_value": "30",
                                    "display_value": "\u0421\u0435\u0440\u0432\u0438\u0441\u043d\u044b\u0439 \u043f\u043e\u0440\u0442\u0430\u043b",
                                    "order": 20
                                },
                                {
                                    "database_value": "80",
                                    "display_value": "API",
                                    "order": 80
                                }
                            ]
                        },
                        "sys_column_name": "contact_type",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.contact_type",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": {
                            "database_value": "10",
                            "display_value": "\u0417\u0432\u043e\u043d\u043e\u043a"
                        },
                        "field_info": null
                    },
                    {
                        "split": "split",
                        "title": null
                    },
                    {
                        "column_id": "172002986792589143",
                        "column_type": "list",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 13,
                        "is_mandatory": false,
                        "name": "\u0422\u044d\u0433",
                        "read_only": false,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": {
                            "table_id": "172002964091485804",
                            "table_name": "itsm_spb_tags",
                            "reference_qualifier": {
                                "is_need_request": true,
                                "condition": "",
                                "is_fixed": true
                            },
                            "dependency_map_link": null,
                            "can_create": false,
                            "can_read": true
                        },
                        "sys_column_name": "tag",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.tag",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": [],
                        "field_info": null
                    },
                    {
                        "split": "end_split",
                        "title": null
                    },
                    {
                        "split": "begin_split",
                        "title": null
                    },
                    {
                        "column_id": "158088653215716107",
                        "column_type": "reference",
                        "dependent_on_column": null,
                        "extra_attributes": null,
                        "index": 14,
                        "is_mandatory": false,
                        "name": "\u0423\u0441\u043b\u0443\u0433\u0430",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": {
                            "table_id": "157233752019606969",
                            "table_name": "sys_cmdb_ci_service",
                            "dependency_map_link": null,
                            "reference_qualifier": {
                                "is_need_request": false,
                                "condition": null,
                                "is_fixed": false
                            },
                            "can_create": false,
                            "can_read": true
                        },
                        "sys_column_name": "service",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.service",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": null,
                        "field_info": null
                    },
                    {
                        "split": "split",
                        "title": null
                    },
                    {
                        "column_id": "170853188406280613",
                        "column_type": "boolean",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 15,
                        "is_mandatory": false,
                        "name": "\u041f\u0440\u0438\u0451\u043c\u043d\u0430\u044f \u043a\u0430\u043c\u043f\u0430\u043d\u0438\u044f",
                        "read_only": false,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": [],
                        "sys_column_name": "admissions_committee",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.admissions_committee",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": 0,
                        "field_info": {
                            "hint": "",
                            "placeholder": "",
                            "help": "\u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435 \u0441\u0432\u044f\u0437\u0430\u043d\u043e \u0441 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430\u043c\u0438 \u043f\u0440\u0438\u0435\u043c\u043d\u043e\u0439 \u043a\u0430\u043c\u043f\u0430\u043d\u0438\u0438"
                        }
                    },
                    {
                        "column_id": "171932797194555580",
                        "column_type": "boolean",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 16,
                        "is_mandatory": false,
                        "name": "\u0413\u0417-\u0412\u0428\u0413\u0423",
                        "read_only": false,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": [],
                        "sys_column_name": "time_of_heroes",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.time_of_heroes",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": 0,
                        "field_info": {
                            "hint": "",
                            "placeholder": "",
                            "help": "\u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435 \u0441\u0432\u044f\u0437\u0430\u043d\u043e \u0441 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430\u043c\u0438 \u0412\u0428\u0413\u0423"
                        }
                    },
                    {
                        "column_id": "156943341301425157",
                        "column_type": "boolean",
                        "dependent_on_column": null,
                        "extra_attributes": null,
                        "index": 17,
                        "is_mandatory": false,
                        "name": "\u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u044f",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": [],
                        "sys_column_name": "attention_required",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.attention_required",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": 0,
                        "field_info": {
                            "hint": "",
                            "placeholder": "",
                            "help": "\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u044d\u0442\u043e\u0442 \u0444\u043b\u0430\u0436\u043e\u043a, \u0447\u0442\u043e\u0431\u044b \u0443\u0432\u0435\u0434\u043e\u043c\u0438\u0442\u044c \u043b\u0438\u043d\u0435\u0439\u043d\u043e\u0433\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f \u043e \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u043e\u0439 \u0433\u0440\u0443\u043f\u043f\u0435\/\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u043e\u043c \u0438\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u0435"
                        }
                    },
                    {
                        "column_id": "172267218090728938",
                        "column_type": "boolean",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 18,
                        "is_mandatory": false,
                        "name": "\u0417\u0430\u0434\u0430\u0447\u0430 \u0415\u0421\u0422\u041f",
                        "read_only": false,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": [],
                        "sys_column_name": "first_line_task",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.first_line_task",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": 0,
                        "field_info": {
                            "hint": "",
                            "placeholder": "",
                            "help": "\u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043e \u043d\u0430 \u0441\u043e\u043f\u0440\u043e\u0432\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0415\u0421\u0422\u041f"
                        }
                    },
                    {
                        "column_id": "173815554490971521",
                        "column_type": "boolean",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 19,
                        "is_mandatory": false,
                        "name": "\u041a\u043e\u043d\u0444\u0438\u0434\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u043e",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": [],
                        "sys_column_name": "task_confidentiality",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.task_confidentiality",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": 0,
                        "field_info": {
                            "hint": "",
                            "placeholder": "",
                            "help": "\u0414\u0430\u043d\u043d\u043e\u0435 \u043e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u043a \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0443 \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u043e\u0439 \u0433\u0440\u0443\u043f\u043f\u0435, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043e\u043d\u043e \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043e"
                        }
                    },
                    {
                        "column_id": "172107329097772815",
                        "column_type": "reference",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 20,
                        "is_mandatory": false,
                        "name": "\u0421\u0442\u0430\u0442\u044c\u044f FAQ",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": {
                            "table_id": "156846397908814773",
                            "table_name": "article",
                            "dependency_map_link": null,
                            "reference_qualifier": {
                                "is_need_request": false,
                                "condition": "(nameLIKE\u0410\u0443\u0442\u0441\u043e\u0440\u0441\u0438\u043d\u0433)",
                                "is_fixed": true
                            },
                            "can_create": true,
                            "can_read": true
                        },
                        "sys_column_name": "faq_article",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.faq_article",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": null,
                        "field_info": null
                    },
                    {
                        "split": "end_split",
                        "title": null
                    },
                    {
                        "split": "split",
                        "title": null
                    },
                    {
                        "column_id": "156984232918366024",
                        "column_type": "journal_input",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 21,
                        "is_mandatory": false,
                        "name": "\u0411\u0435\u0441\u0435\u0434\u0430",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": [],
                        "sys_column_name": "additional_comments",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.additional_comments",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": null,
                        "field_info": null
                    },
                    {
                        "column_id": "156985007714078005",
                        "column_type": "journal_input",
                        "dependent_on_column": null,
                        "extra_attributes": null,
                        "index": 22,
                        "is_mandatory": false,
                        "name": "\u0420\u0430\u0431\u043e\u0447\u0438\u0435 \u0437\u0430\u043c\u0435\u0442\u043a\u0438",
                        "read_only": false,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": [],
                        "sys_column_name": "work_notes",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.work_notes",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": null,
                        "field_info": null
                    },
                    {
                        "client_script": "; (async () => {\n    window.s_widget_custom = window.s_widget_custom || {};\n    s_widget.setFieldValue('tableName', s_form.getTableName());\n    s_widget.setFieldValue('recordId', s_form.sysId);\n    s_widget.setFieldValue('action', 'INIT');\n    await s_widget.serverUpdate();\n    if (!s_widget.getFieldValue('isVisibleMainButton')) {\n        return;\n    }\n    let currentTab = s_widget.getOptionValue('default_input') || 'additional_comments';\n    let delayTimer;\n    SimpleEventBus.on('activityFeedCommentTabChanged', (data) => {\n        const newCurrentTab = data.currentTab.split('.')[0];\n        currentTab = newCurrentTab;\n    });\n    const store = s_widget.getFieldValue('store');\n    render('default');\n    const handleClickOutsideBox = function (event) {\n        const box = document.getElementById('quick-response-modal');\n        if (box && !box.contains(event.target) && event.target.id !== 'quick-response-main-button') {\n            s_widget.setFieldValue('isVisibleModal', false);\n            s_widget.setFieldValue('isVisibleBackButton', false);\n            s_widget_custom.goBack();\n            document.removeEventListener('click', handleClickOutsideBox, false);\n        }\n    }\n    s_widget_custom.toggleVisbility = () => {\n        if (s_widget.getFieldValue('isVisibleModal')) {\n            s_widget.setFieldValue('isVisibleModal', false);\n            document.removeEventListener('click', handleClickOutsideBox, false);\n            return;\n        }\n        s_widget.setFieldValue('isVisibleModal', true);\n        document.addEventListener('click', handleClickOutsideBox, false);\n        setTimeout(() => {\n            const searchInput = document.querySelector('.quick-response-navigation input');\n            searchInput.focus();\n        }, 0);\n    };\n    s_widget_custom.toggleFavorite = async (id) => {\n        const currentCategoryId = s_widget.getFieldValue('currentCategoryId');\n        const currentSearch = s_widget.getFieldValue('searchString');\n        const isFavorite = store.favoriteIds.includes(id);\n        s_widget.setFieldValue('chosenResponseId', id);\n        s_widget.setFieldValue('action', isFavorite ? 'DELETE_FAVORITE' : 'ADD_FAVORITE');\n        await s_widget.serverUpdate();\n        isFavorite ?\n            store.favoriteIds = store.favoriteIds.filter(el => el !== id)\n            : store.favoriteIds.push(id);\n        if (currentSearch) {\n            render('search');\n            return;\n        }\n        if (currentCategoryId) {\n            render('category');\n            return;\n        }\n        render('default');\n    };\n    s_widget_custom.openCategory = async (id) => {\n        const categoryTitle = store.categories.find(\n            category => category.id === id\n        ).title.trim();\n        s_widget.setFieldValue('currentCategoryId', id);\n        s_widget.setFieldValue('currentCategoryTitle', categoryTitle);\n        render('category');\n    };\n    s_widget_custom.goBack = async () => {\n        s_widget.setFieldValue('currentCategoryId', '');\n        s_widget.setFieldValue('currentCategoryTitle', '');\n        s_widget.setFieldValue('searchString', '');\n        render('default')\n    };\n    s_widget_custom.setComment = async (response) => {\n        const changedFields = s_form.getChanges();\n        changedFields.map(elem => {\n            elem.displayValue = s_form.getDisplayValue(elem.fieldName);\n            return elem;\n        });\n        s_widget.setFieldValue('changedFields', changedFields);\n        s_widget.setFieldValue('currentResponseId', response);\n        s_widget.setFieldValue('action', 'SET_RESPONSE');\n        await s_widget.serverUpdate();\n        const parsedAnswer = s_widget.getFieldValue('currentResponse');\n        s_form.setValue(currentTab, parsedAnswer);\n        s_widget_custom.goBack();\n        s_widget_custom.toggleVisbility();\n    };\n    s_widget_custom.search = () => {\n        clearTimeout(delayTimer);\n        delayTimer = setTimeout(async function () {\n            const currentCategoryId = s_widget.getFieldValue('currentCategoryId');\n            const currentSearch = s_widget.getFieldValue('searchString');\n            if (currentSearch) {\n                render('search');\n                return;\n            }\n            if (currentCategoryId) {\n                render('category');\n                return;\n            }\n            render('default');\n        }, 400);\n    };\n    function render(widgetState) {\n        setTimeout(() => {\n            switch (widgetState) {\n                case 'default':\n                    renderDefault(store);\n                    return;\n                case 'category':\n                    renderCategory(store);\n                    return;\n                case 'search':\n                    renderSearch(store);\n                    return;\n                default:\n                    return;\n            }\n        }, 0)\n    };\n})();\nconst QUICK_RESPONSE_RECORDS = 'quick-response-records';\nconst QUICK_RESPONSE_FAVORITES = 'quick-response-records-favorites';\nconst createTemplate = {\n    categories: (el) => (\n        `<div class=\"quick-response-records-category\" id='${el.id}' key='${el.id}'event-click=\"window.s_widget_custom.openCategory('${el.id}');\">\n            <div class=\"quick-response-records-category__title\">\n                ${escapeHtml(el.title)}\n            <\/div>\n            <div class=\"quick-response-records-category__open-button\"><\/div>\n        <\/div>`),\n    quickResponses: (el, isFavorite = false) => (\n        `<div class=\"quick-response-records-response\" id='${el.id}' key='${el.id}'>\n            <div class=\"quick-response-records-response-header\">\n                <div class=\"quick-response-records-response__title\" event-click=\"window.s_widget_custom.setComment('${el.id}');\">\n                    ${escapeHtml(el.title)}\n                <\/div>\n                <div class=\"quick-response-records-response-favorite-button-box\">\n                    <div class=\"quick-response-records-response__${isFavorite ? 'delete' : 'add'}-favorite\" event-click=\"window.s_widget_custom.toggleFavorite('${el.id}');\">\n                    <\/div>\n                <\/div>\n            <\/div>\n            <div class=\"quick-response-records-response__text\" event-click=\"window.s_widget_custom.setComment('${el.id}');\">\n                ${escapeHtml(el.text)}\n            <\/div>\n        <\/div>`),\n    groupHeaderTitle: (title) => `<div class=\"quick-response-records__group-header\">${escapeHtml(title)}<\/div>`,\n    plug: (text) => `<div class=\"quick-response-records__empty-search\">${escapeHtml(text)}<\/div>`,\n    border: () => '<div class=\"quick-response-records__internal-border-line\"><\/div>'\n}\nconst categoriesHeaderTitle = () => createTemplate.groupHeaderTitle(s_widget.getFieldValue('categoriesHeaderTitle'));\nconst quickResposesHeaderTitle = () => createTemplate.groupHeaderTitle(s_widget.getFieldValue('headerTitle'));\nconst favoritesHeaderTitle = () => createTemplate.groupHeaderTitle(s_widget.getFieldValue('favoriteHeaderTitle'));\nconst plug = () => createTemplate.plug(s_widget.getFieldValue('emptySearchResult'));\nconst border = () => createTemplate.border();\nfunction setHeader(header = '') {\n    const QUICK_RESPONSE_HEADER = 'quick-response-modal__current-category-name';\n    s_widget.removeTemplate(QUICK_RESPONSE_HEADER);\n    s_widget.addTemplate(QUICK_RESPONSE_HEADER, `<div>${escapeHtml(header)}<\/div>`, '', 'inner');\n}\nfunction renderDefault(store) {\n    const categories = store.categories.map(createTemplate.categories);\n    const responses = store.quickResponses.filter(({ id, category }) => !category && !store.favoriteIds.includes(id)).map(elem => createTemplate.quickResponses(elem));\n    const favorites = store.quickResponses.filter(({ id }) => store.favoriteIds.includes(id)).map(elem => createTemplate.quickResponses(elem, true));\n    s_widget.setFieldValue('isVisibleBackButton', false);\n    s_widget.setFieldValue('areVisibleFavorites', false);\n    setHeader();\n    s_widget.removeTemplate(QUICK_RESPONSE_RECORDS);\n    if (favorites.length) {\n        s_widget.setFieldValue('areVisibleFavorites', true);\n        favorites.unshift(favoritesHeaderTitle());\n        favorites.push(border());\n        s_widget.removeTemplate(QUICK_RESPONSE_FAVORITES);\n        s_widget.addTemplate(QUICK_RESPONSE_FAVORITES, favorites.join(''), '', 'inner');\n    }\n    if (categories.length && responses.length) {\n        categories.push(border());\n    }\n    if (categories.length) {\n        categories.unshift(categoriesHeaderTitle());\n        s_widget.addTemplate(QUICK_RESPONSE_RECORDS, categories.join(''), '', 'inner');\n    }\n    if (responses.length) {\n        responses.unshift(quickResposesHeaderTitle());\n        s_widget.addTemplate(QUICK_RESPONSE_RECORDS, responses.join(''), '', 'inner');\n    }\n}\nfunction renderCategory(store) {\n    const currentCategoryTitle = s_widget.getFieldValue('currentCategoryTitle');\n    const currentCategoryId = s_widget.getFieldValue('currentCategoryId');\n    s_widget.setFieldValue('isVisibleBackButton', true);\n    s_widget.setFieldValue('searchString', '');\n    s_widget.setFieldValue('areVisibleFavorites', false);\n    setHeader(currentCategoryTitle);\n    const responses = store.quickResponses.filter(({ id, category }) => (category === currentCategoryId) && (!store.favoriteIds.includes(id))).map(elem => createTemplate.quickResponses(elem));\n    const favorites = store.quickResponses.filter(({ id, category }) => (category === currentCategoryId) && (store.favoriteIds.includes(id))).map(elem => createTemplate.quickResponses(elem, true));\n    if (favorites.length) {\n        s_widget.setFieldValue('areVisibleFavorites', true);\n        favorites.unshift(favoritesHeaderTitle());\n        if (responses.length) {\n            favorites.push(border());\n        }\n        s_widget.removeTemplate(QUICK_RESPONSE_FAVORITES);\n        s_widget.addTemplate(QUICK_RESPONSE_FAVORITES, favorites.join(''), '', 'inner');\n    }\n    s_widget.removeTemplate(QUICK_RESPONSE_RECORDS);\n    s_widget.addTemplate(QUICK_RESPONSE_RECORDS, responses.join(''), '', 'inner');\n    return;\n}\nfunction renderSearch(store) {\n    const currentCategoryTitle = s_widget.getFieldValue('currentCategoryTitle');\n    const currentCategoryId = s_widget.getFieldValue('currentCategoryId');\n    s_widget.setFieldValue('areVisibleFavorites', false);\n    const currentSearch = s_widget.getFieldValue('searchString').toLowerCase();\n    if (currentCategoryTitle) {\n        const responses = store.quickResponses\n            .filter(({ category, title }) => (category === currentCategoryId) && (title.toLowerCase().includes(currentSearch)))\n            .map(elem => createTemplate.quickResponses(elem, store.favoriteIds.includes(elem.id) ? true : false));\n        s_widget.removeTemplate(QUICK_RESPONSE_RECORDS);\n        setHeader(currentCategoryTitle);\n        s_widget.addTemplate(QUICK_RESPONSE_RECORDS, (responses.length ? responses.join('') : plug()), '', 'inner');\n        return;\n    }\n    const categories = store.categories\n        .filter(({ title }) => title.toLowerCase().includes(currentSearch))\n        .map(createTemplate.categories);\n    const responses = store.quickResponses\n        .filter(({ title }) => title.toLowerCase().includes(currentSearch))\n        .map(elem => createTemplate.quickResponses(elem, store.favoriteIds.includes(elem.id) ? true : false));\n    if (!categories.length && !responses.length) {\n        s_widget.removeTemplate(QUICK_RESPONSE_RECORDS);\n        s_widget.addTemplate(QUICK_RESPONSE_RECORDS, plug(), '', 'inner');\n        return;\n    }\n    if (categories.length) {\n        categories.unshift(categoriesHeaderTitle());\n    }\n    if (categories.length && responses.length) {\n        categories.push(border());\n    }\n    if (responses.length) {\n        responses.unshift(quickResposesHeaderTitle());\n    }\n    const quickResponseRecords = categories.concat(responses);\n    s_widget.removeTemplate(QUICK_RESPONSE_RECORDS);\n    setHeader();\n    s_widget.addTemplate(QUICK_RESPONSE_RECORDS, quickResponseRecords.join(''), '', 'inner');\n    return;\n}\nfunction escapeHtml(unsafe) {\n    return unsafe\n        .replace(\/&\/g, \"&amp;\")\n        .replace(\/<\/g, \"&lt;\")\n        .replace(\/>\/g, \"&gt;\")\n        .replace(\/\"\/g, \"&quot;\")\n        .replace(\/'\/g, \"&#039;\");\n}",
                        "css": ".quick-response-wrapper {\n    position: relative;\n    display: block;\n}\n.quick-response-main-button {\n    position: absolute;\n    top: 12px;\n    right: 12px;\n    z-index: 49;\n    width: 32px;\n    height: 32px;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-image: url(\"data:image\/svg+xml,%3Csvg width='18' height='20' viewBox='0 0 18 20' fill='none' xmlns='http:\/\/www.w3.org\/2000\/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M10.1652 0.902295C10.5045 1.0496 10.7061 1.40299 10.6602 1.77008L9.944 7.50005H16.5C16.8234 7.50005 17.1175 7.6871 17.2547 7.97992C17.3918 8.27274 17.3472 8.61846 17.1402 8.86687L8.80686 18.8669C8.57003 19.1511 8.17419 19.2451 7.83485 19.0978C7.4955 18.9505 7.29389 18.5971 7.33978 18.23L8.05602 12.5H1.50001C1.17666 12.5 0.882502 12.313 0.745352 12.0202C0.608202 11.7274 0.652823 11.3816 0.859826 11.1332L9.19316 1.13323C9.42999 0.849031 9.82583 0.754988 10.1652 0.902295ZM3.27921 10.8334H9.00001C9.23904 10.8334 9.46655 10.936 9.62474 11.1152C9.78293 11.2944 9.85656 11.5329 9.82691 11.7701L9.34613 15.6163L14.7208 9.16671H9.00001C8.76098 9.16671 8.53347 9.06407 8.37528 8.88488C8.21709 8.70569 8.14346 8.4672 8.17311 8.23002L8.65389 4.38376L3.27921 10.8334Z' fill='%236800B2'\/%3E%3C\/svg%3E\");\n}\n.quick-response-modal {\n    position: absolute;\n    background: #FFFFFF;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.08), 0px 1px 4px rgba(0, 0, 0, 0.12);\n    border-radius: 4px;\n    top: 50px;\n    right: 12px;\n    z-index: 49;\n    width: 328px;\n    max-width: calc(100% - 12px);\n    display: flex;\n    flex-direction: column;\n}\n.quick-response-header {\n    margin: 16px 16px 0px 16px;\n    font-family: 'Open Sans';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 14px;\n    line-height: 20px;\n    color: #2E3238;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 6px;\n}\n.quick-response-header__image {\n    width: 16px;\n    height: 16px;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-image: url(\"data:image\/svg+xml,%3Csvg width='14' height='16' viewBox='0 0 14 16' fill='none' xmlns='http:\/\/www.w3.org\/2000\/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M7.93214 0.721836C8.20361 0.839682 8.3649 1.12239 8.32819 1.41606L7.7552 6.00004H13C13.2587 6.00004 13.494 6.14968 13.6037 6.38393C13.7135 6.61819 13.6778 6.89477 13.5122 7.09349L6.84549 15.0935C6.65603 15.3208 6.33936 15.3961 6.06788 15.2782C5.7964 15.1604 5.63511 14.8777 5.67182 14.584L6.24482 10H1.00001C0.74133 10 0.506002 9.8504 0.396282 9.61614C0.286562 9.38189 0.322259 9.1053 0.487861 8.90658L7.15453 0.906581C7.34399 0.679225 7.66066 0.60399 7.93214 0.721836ZM2.42337 8.6667H7.00001C7.19123 8.6667 7.37324 8.74882 7.49979 8.89217C7.62634 9.03552 7.68525 9.22632 7.66153 9.41606L7.2769 12.4931L11.5766 7.33337H7.00001C6.80879 7.33337 6.62677 7.25126 6.50022 7.10791C6.37367 6.96455 6.31477 6.77376 6.33849 6.58401L6.72312 3.50701L2.42337 8.6667Z' fill='%236800B2' \/%3E%3C\/svg%3E\");\n}\n.quick-response-navigation {\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    margin: 8px 16px 8px 16px;\n    column-gap: 8px;\n}\n.quick-response-navigation__button {\n    width: 32px;\n    height: 32px;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-image: url(\"data:image\/svg+xml,%3Csvg width='8' height='12' viewBox='0 0 8 12' fill='none' xmlns='http:\/\/www.w3.org\/2000\/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M7.08926 0.410744C7.41469 0.736181 7.41469 1.26382 7.08926 1.58926L2.67851 6L7.08926 10.4107C7.41469 10.7362 7.41469 11.2638 7.08926 11.5893C6.76382 11.9147 6.23618 11.9147 5.91074 11.5893L0.910744 6.58926C0.585308 6.26382 0.585308 5.73618 0.910744 5.41074L5.91074 0.410744C6.23618 0.0853076 6.76382 0.0853076 7.08926 0.410744Z' fill='%232E3238'\/%3E%3C\/svg%3E\");\n}\n.quick-response-navigation__input {\n    width: 100%;\n    height: 32px;\n    border: 2px;\n    border-radius: 4px;\n    font-size: 14px;\n    background: #FCFCFD;\n    -webkit-transition: all 0.1s ease-out;\n    transition: all 0.1s ease-out;\n    color: #2E3238;\n}\n.quick-response-navigation__logo {\n    position: absolute;\n    top: 8px;\n    right: 8px;\n    width: 16px;\n    height: 16px;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-image: url(\"data:image\/svg+xml,%3Csvg width='14' height='14' viewBox='0 0 14 14' fill='none' xmlns='http:\/\/www.w3.org\/2000\/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M10.0785 11.0212C9.05204 11.8423 7.75002 12.3333 6.33333 12.3333C3.01962 12.3333 0.333333 9.64704 0.333333 6.33333C0.333333 3.01962 3.01962 0.333333 6.33333 0.333333C9.64704 0.333333 12.3333 3.01962 12.3333 6.33333C12.3333 7.74999 11.8424 9.05198 11.0213 10.0784L13.4714 12.5285C13.7318 12.7889 13.7318 13.211 13.4714 13.4713C13.2111 13.7317 12.7889 13.7317 12.5286 13.4713L10.0785 11.0212ZM1.66667 6.33333C1.66667 3.756 3.756 1.66667 6.33333 1.66667C8.91066 1.66667 11 3.756 11 6.33333C11 7.5905 10.5029 8.73156 9.69451 9.57067C9.6716 9.58826 9.64957 9.60755 9.62859 9.62853C9.60761 9.64951 9.58832 9.67155 9.57072 9.69446C8.73161 10.5029 7.59053 11 6.33333 11C3.756 11 1.66667 8.91066 1.66667 6.33333Z' fill='%232E3238'\/%3E%3C\/svg%3E\");\n}\n.quick-response-modal__current-category-name {\n    font-family: 'Open Sans';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 16px;\n    color: #5C6470;\n    padding: 0px 16px 8px 16px;\n    border-bottom: 1px solid #D5D8DD;\n}\n.quick-response-records__group-header {\n    margin: 8px 16px;\n    font-family: 'Open Sans';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 14px;\n    line-height: 20px;\n    display: flex;\n    align-items: center;\n    text-transform: uppercase;\n    color: #5C6470;\n}\n.quick-response-records__internal-border-line {\n    margin: 8px 16px;\n    height: 1px;\n    background: #D5D8DD;\n}\n.quick-response-records-box {\n    width: 100%;\n    padding-bottom: 8px;\n    overflow-y: auto;\n    max-height: 255px;\n}\n.quick-response-records-category {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    padding: 6px 16px;\n    background: #FFFFFF;\n    transition: background 0.1s;\n    justify-content: space-between;\n    font-family: 'Open Sans';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 20px;\n    color: #2E3238;\n}\n.quick-response-records-response {\n    display: flex;\n    flex-direction: column;\n    padding: 4px 16px;\n    background: #FFFFFF;\n    transition: background 0.1s;\n}\n.quick-response-records-response-header {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    font-family: 'Open Sans';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 20px;\n    color: #2E3238;\n}\n.quick-response-records-response__text {\n    padding-top: 2px;\n    font-family: 'Open Sans';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 16px;\n    color: #5C6470;\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n}\n.quick-response-records-response__title {\n    width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n.quick-response-records-category__title {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n.quick-response-records-category__open-button {\n    width: 16px;\n    height: 16px;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-image: url(\"data:image\/svg+xml,%3Csvg width='6' height='10' viewBox='0 0 6 10' fill='none' xmlns='http:\/\/www.w3.org\/2000\/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M0.528596 0.528596C0.788945 0.268246 1.21106 0.268246 1.4714 0.528596L5.47141 4.5286C5.73175 4.78895 5.73175 5.21106 5.47141 5.47141L1.4714 9.47141C1.21106 9.73176 0.788945 9.73176 0.528596 9.47141C0.268246 9.21106 0.268246 8.78894 0.528596 8.52859L4.05719 5L0.528596 1.4714C0.268246 1.21105 0.268246 0.788945 0.528596 0.528596Z' fill='%232E3238'\/%3E%3C\/svg%3E\");\n}\n.quick-response-records-response__add-favorite {\n    width: 16px;\n    height: 16px;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-image: url(\"data:image\/svg+xml,%3Csvg width='16' height='15' viewBox='0 0 16 15' fill='none' xmlns='http:\/\/www.w3.org\/2000\/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M8 0.666667C8.25375 0.666667 8.48549 0.810715 8.59781 1.03825L10.5028 4.89764L14.7631 5.52034C15.0141 5.55704 15.2226 5.73304 15.3008 5.97438C15.3791 6.21572 15.3136 6.48055 15.1318 6.65757L12.0497 9.65958L12.7771 13.9006C12.82 14.1508 12.7171 14.4036 12.5118 14.5527C12.3065 14.7019 12.0343 14.7215 11.8097 14.6034L8 12.5999L4.1903 14.6034C3.96569 14.7215 3.6935 14.7019 3.48818 14.5527C3.28286 14.4036 3.18003 14.1508 3.22293 13.9006L3.95032 9.65958L0.868177 6.65757C0.686432 6.48055 0.620917 6.21572 0.699168 5.97438C0.77742 5.73304 0.985874 5.55704 1.23691 5.52034L5.49716 4.89764L7.40219 1.03825C7.51451 0.810715 7.74625 0.666667 8 0.666667ZM8 2.8395L6.5378 5.80175C6.44078 5.99831 6.25332 6.13462 6.03642 6.16632L2.76561 6.6444L5.13182 8.94909C5.28907 9.10226 5.36085 9.32301 5.32374 9.53936L4.76545 12.7945L7.6897 11.2566C7.88395 11.1545 8.11604 11.1545 8.3103 11.2566L11.2345 12.7944L10.6763 9.53936C10.6392 9.32301 10.7109 9.10226 10.8682 8.94909L13.2344 6.6444L9.96358 6.16632C9.74668 6.13462 9.55922 5.99831 9.46219 5.80175L8 2.8395Z' fill='%23D5D8DD'\/%3E%3C\/svg%3E\");\n    transition: background-image 0.1s;\n}\n.quick-response-records-response__delete-favorite {\n    width: 16px;\n    height: 16px;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-image: url(\"data:image\/svg+xml,%3Csvg width='16' height='15' viewBox='0 0 16 15' fill='none' xmlns='http:\/\/www.w3.org\/2000\/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M8 0.666667C8.25375 0.666667 8.48549 0.810715 8.59781 1.03825L10.5028 4.89764L14.7631 5.52034C15.0141 5.55704 15.2226 5.73304 15.3008 5.97438C15.3791 6.21572 15.3136 6.48055 15.1318 6.65757L12.0497 9.65958L12.7771 13.9006C12.82 14.1508 12.7171 14.4036 12.5118 14.5527C12.3065 14.7019 12.0343 14.7215 11.8097 14.6034L8 12.5999L4.1903 14.6034C3.96569 14.7215 3.6935 14.7019 3.48818 14.5527C3.28286 14.4036 3.18003 14.1508 3.22293 13.9006L3.95032 9.65958L0.868177 6.65757C0.686432 6.48055 0.620917 6.21572 0.699168 5.97438C0.77742 5.73304 0.985874 5.55704 1.23691 5.52034L5.49716 4.89764L7.40219 1.03825C7.51451 0.810715 7.74625 0.666667 8 0.666667ZM8 2.8395L6.5378 5.80175C6.44078 5.99831 6.25332 6.13462 6.03642 6.16632L2.76561 6.6444L5.13182 8.94909C5.28907 9.10226 5.36085 9.32301 5.32374 9.53936L4.76545 12.7945L7.6897 11.2566C7.88395 11.1545 8.11604 11.1545 8.3103 11.2566L11.2345 12.7944L10.6763 9.53936C10.6392 9.32301 10.7109 9.10226 10.8682 8.94909L13.2344 6.6444L9.96358 6.16632C9.74668 6.13462 9.55922 5.99831 9.46219 5.80175L8 2.8395Z' fill='%23E68600'\/%3E%3C\/svg%3E\");\n    transition: background-image 0.1s;\n}\n.quick-response-records__empty-search {\n    align-items: center;\n    text-align: center;\n    padding: 20px 16px 12px;\n    gap: 10px;\n    font-family: 'Open Sans';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 20px;\n    color: #5C6470;\n}\n.quick-response-records-response__delete-favorite:hover,\n.quick-response-records-response__add-favorite:hover {\n    background-image: url(\"data:image\/svg+xml,%3Csvg width='16' height='15' viewBox='0 0 16 15' fill='none' xmlns='http:\/\/www.w3.org\/2000\/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M8 0.666667C8.25375 0.666667 8.48549 0.810715 8.59781 1.03825L10.5028 4.89764L14.7631 5.52034C15.0141 5.55704 15.2226 5.73304 15.3008 5.97438C15.3791 6.21572 15.3136 6.48055 15.1318 6.65757L12.0497 9.65958L12.7771 13.9006C12.82 14.1508 12.7171 14.4036 12.5118 14.5527C12.3065 14.7019 12.0343 14.7215 11.8097 14.6034L8 12.5999L4.1903 14.6034C3.96569 14.7215 3.6935 14.7019 3.48818 14.5527C3.28286 14.4036 3.18003 14.1508 3.22293 13.9006L3.95032 9.65958L0.868177 6.65757C0.686432 6.48055 0.620917 6.21572 0.699168 5.97438C0.77742 5.73304 0.985874 5.55704 1.23691 5.52034L5.49716 4.89764L7.40219 1.03825C7.51451 0.810715 7.74625 0.666667 8 0.666667ZM8 2.8395L6.5378 5.80175C6.44078 5.99831 6.25332 6.13462 6.03642 6.16632L2.76561 6.6444L5.13182 8.94909C5.28907 9.10226 5.36085 9.32301 5.32374 9.53936L4.76545 12.7945L7.6897 11.2566C7.88395 11.1545 8.11604 11.1545 8.3103 11.2566L11.2345 12.7944L10.6763 9.53936C10.6392 9.32301 10.7109 9.10226 10.8682 8.94909L13.2344 6.6444L9.96358 6.16632C9.74668 6.13462 9.55922 5.99831 9.46219 5.80175L8 2.8395Z' fill='%232E3238'\/%3E%3C\/svg%3E\");\n}\n.quick-response-records-favorite:hover,\n.quick-response-records-category:hover,\n.quick-response-records-response:hover {\n    background: #F2F2F2;\n}\n.quick-response-records-favorite:active,\n.quick-response-records-category:active,\n.quick-response-records-response:active {\n    background: #ABB1BA;\n}\n.quick-response-records-box::-webkit-scrollbar {\n    width: 8px;\n}\n.quick-response-records-box::-webkit-scrollbar-track {\n    background-color: transparent;\n}\n.quick-response-records-box::-webkit-scrollbar-thumb {\n    background-color: #D5D8DD;\n    border-radius: 6px;\n}\n.quick-response-modal:hover {\n    cursor: default;\n}",
                        "template": "<div class=\"quick-response-wrapper\">\n    <div simple-if={data.isVisibleMainButton}>\n        <button id=\"quick-response-main-button\" class=\"quick-response-main-button\" buttonType=\"unstyled\"\n            event-click=\"window.s_widget_custom.toggleVisbility();\"><\/button>\n    <\/div>\n    <div id=\"quick-response-modal\" class=\"quick-response-modal\" simple-if={data.isVisibleModal}>\n        <div class=\"quick-response-header\">\n            <div class=\"quick-response-header__image\"><\/div>\n            <div class=\"quick-response-header__title\">\n                {data.headerTitle}\n            <\/div>\n        <\/div>\n        <div class=\"quick-response-navigation\">\n            <button class=\"quick-response-navigation__button\" simple-if=\"{data.isVisibleBackButton}\" buttonType=\"unstyled\"\n                event-click=\"window.s_widget_custom.goBack();\"><\/button>\n            <string class=\"quick-response-navigation__input\" placeholder=\"{data.searchStringLabel}\" model=\"data.searchString\"\n                event-change=\"s_widget_custom.search();\"><\/string>\n            <div class=\"quick-response-navigation__logo\"><\/div>\n        <\/div>\n        <div id=\"quick-response-modal__current-category-name\" class=\"quick-response-modal__current-category-name\"><\/div>\n        <div id=\"quick-response-records-box\" class=\"quick-response-records-box\">\n            <div simple-if={data.areVisibleFavorites} id=\"quick-response-records-favorites\" class=\"quick-response-records-favorites\"><\/div>\n            <div id=\"quick-response-records\" class=\"quick-response-records\"><\/div>\n        <\/div>\n    <\/div>\n    <div class=\"quick-response-activityfeed\">\n        <activityFeed \/>\n    <\/div>\n<\/div>\n",
                        "widget_instance_id": "171082987794907758",
                        "options": []
                    },
                    {
                        "column_id": "158400593210828356",
                        "column_type": "list",
                        "dependent_on_column": null,
                        "extra_attributes": null,
                        "index": 23,
                        "is_mandatory": false,
                        "name": "\u0421\u043f\u0438\u0441\u043e\u043a \u043e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u044e\u0449\u0438\u0445",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": {
                            "table_id": "155931135900000084",
                            "table_name": "user",
                            "reference_qualifier": {
                                "is_need_request": false,
                                "condition": null,
                                "is_fixed": false
                            },
                            "dependency_map_link": null,
                            "can_create": true,
                            "can_read": true
                        },
                        "sys_column_name": "followers_list",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.followers_list",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": [],
                        "field_info": null
                    },
                    {
                        "column_id": "171467696595388228",
                        "column_type": "choice",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 24,
                        "is_mandatory": false,
                        "name": "\u0417\u0430\u043a\u0440\u044b\u0442\u0438\u0435 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u043c",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": {
                            "values": [
                                {
                                    "database_value": null,
                                    "display_value": "--\u041d\u0435\u0442--",
                                    "order": null
                                },
                                {
                                    "database_value": "1",
                                    "display_value": "No",
                                    "order": 1
                                },
                                {
                                    "database_value": "2",
                                    "display_value": "Yes",
                                    "order": 2
                                }
                            ]
                        },
                        "sys_column_name": "admin_closure",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.admin_closure",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": null,
                        "field_info": null
                    }
                ],
                "index": 1,
                "name": "\u041e\u0431\u0449\u0435\u0435",
                "service_name": "General"
            },
            {
                "elements": [
                    {
                        "column_id": "165711584116557878",
                        "column_type": "reference",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 0,
                        "is_mandatory": false,
                        "name": "\u0421\u0432\u044f\u0437\u0430\u043d\u043d\u0430\u044f \u043c\u043e\u0434\u0435\u043b\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u0430",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": {
                            "table_id": "160372368003454822",
                            "table_name": "sys_re_model",
                            "dependency_map_link": null,
                            "reference_qualifier": {
                                "is_need_request": false,
                                "condition": "",
                                "is_fixed": false
                            },
                            "can_create": true,
                            "can_read": true
                        },
                        "sys_column_name": "related_request_model",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.related_request_model",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": null,
                        "field_info": null
                    },
                    {
                        "column_id": "156984149317835551",
                        "column_type": "reference",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 1,
                        "is_mandatory": false,
                        "name": "\u0428\u0430\u0431\u043b\u043e\u043d \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043d\u0430 \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u043d\u0438\u0435",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": {
                            "table_id": "156984254212112414",
                            "table_name": "itsm_request_template",
                            "dependency_map_link": null,
                            "reference_qualifier": {
                                "is_need_request": false,
                                "condition": "",
                                "is_fixed": false
                            },
                            "can_create": false,
                            "can_read": true
                        },
                        "sys_column_name": "request_template",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.request_template",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": null,
                        "field_info": null
                    },
                    {
                        "column_id": "156958353210132701",
                        "column_type": "reference",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 2,
                        "is_mandatory": false,
                        "name": "\u0414\u043e\u0447\u0435\u0440\u043d\u0438\u0439 \u0437\u0430\u043f\u0440\u043e\u0441",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": {
                            "table_id": "156950616617772294",
                            "table_name": "itsm_request",
                            "dependency_map_link": null,
                            "reference_qualifier": {
                                "is_need_request": true,
                                "condition": "",
                                "is_fixed": true
                            },
                            "can_create": true,
                            "can_read": true
                        },
                        "sys_column_name": "slave_request",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.slave_request",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": null,
                        "field_info": null
                    },
                    {
                        "column_id": "156950805418720770",
                        "column_type": "list",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 3,
                        "is_mandatory": false,
                        "name": "\u0420\u0435\u0448\u0435\u043d\u043e \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u043c\u0438",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": {
                            "table_id": "156950641515337420",
                            "table_name": "itsm_change_request",
                            "reference_qualifier": {
                                "is_need_request": true,
                                "condition": "",
                                "is_fixed": true
                            },
                            "dependency_map_link": null,
                            "can_create": true,
                            "can_read": true
                        },
                        "sys_column_name": "solved_by_changes",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.solved_by_changes",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": [],
                        "field_info": null
                    },
                    {
                        "column_id": "156950799417154509",
                        "column_type": "list",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 4,
                        "is_mandatory": false,
                        "name": "\u0421\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": {
                            "table_id": "156950604414524664",
                            "table_name": "itsm_problem",
                            "reference_qualifier": {
                                "is_need_request": true,
                                "condition": "",
                                "is_fixed": true
                            },
                            "dependency_map_link": null,
                            "can_create": true,
                            "can_read": true
                        },
                        "sys_column_name": "related_problems",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.related_problems",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": [],
                        "field_info": null
                    },
                    {
                        "split": "split",
                        "title": null
                    },
                    {
                        "column_id": "156950468316785374",
                        "column_type": "choice",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 5,
                        "is_mandatory": false,
                        "name": "\u0423\u0440\u043e\u0432\u0435\u043d\u044c \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": {
                            "values": [
                                {
                                    "database_value": null,
                                    "display_value": "--\u041d\u0435\u0442--",
                                    "order": null
                                },
                                {
                                    "database_value": "0",
                                    "display_value": "\u0420\u043e\u0434\u0438\u0442\u0435\u043b\u044c",
                                    "order": 0
                                },
                                {
                                    "database_value": "1",
                                    "display_value": "\u041f\u043e\u0442\u043e\u043c\u043e\u043a",
                                    "order": 20
                                }
                            ]
                        },
                        "sys_column_name": "level_of_dependency",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.level_of_dependency",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": null,
                        "field_info": null
                    },
                    {
                        "column_id": "156958401412933281",
                        "column_type": "reference",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 6,
                        "is_mandatory": false,
                        "name": "\u0420\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0437\u0430\u043f\u0440\u043e\u0441",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": {
                            "table_id": "156950616617772294",
                            "table_name": "itsm_request",
                            "dependency_map_link": null,
                            "reference_qualifier": {
                                "is_need_request": true,
                                "condition": "",
                                "is_fixed": true
                            },
                            "can_create": true,
                            "can_read": true
                        },
                        "sys_column_name": "master_request",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.master_request",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": null,
                        "field_info": null
                    },
                    {
                        "column_id": "156950854611456880",
                        "column_type": "reference",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 7,
                        "is_mandatory": false,
                        "name": "\u0421\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0432\u043e\u043f\u0440\u043e\u0441",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": {
                            "table_id": "156950639316968592",
                            "table_name": "itsm_inquiry",
                            "dependency_map_link": null,
                            "reference_qualifier": {
                                "is_need_request": true,
                                "condition": "",
                                "is_fixed": true
                            },
                            "can_create": true,
                            "can_read": true
                        },
                        "sys_column_name": "related_inquiry",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.related_inquiry",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": {
                            "database_value": "174099861691344550",
                            "display_value": "INQ0103321 \u0422\u0435\u0441\u0442",
                            "reference_state": null
                        },
                        "field_info": null
                    },
                    {
                        "column_id": "156957027610801413",
                        "column_type": "reference",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 8,
                        "is_mandatory": false,
                        "name": "\u0421\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0439 \u0438\u043d\u0446\u0438\u0434\u0435\u043d\u0442",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": {
                            "table_id": "156950677111866258",
                            "table_name": "itsm_incident",
                            "dependency_map_link": null,
                            "reference_qualifier": {
                                "is_need_request": true,
                                "condition": "",
                                "is_fixed": true
                            },
                            "can_create": true,
                            "can_read": true
                        },
                        "sys_column_name": "related_incident",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.related_incident",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": null,
                        "field_info": null
                    },
                    {
                        "column_id": "171232958591995508",
                        "column_type": "url",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 9,
                        "is_mandatory": false,
                        "name": "\u0421\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u0437\u0430\u044f\u0432\u043a\u0443 \u0432 GLPI",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": [],
                        "sys_column_name": "glpi_link",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.glpi_link",
                        "validate": {
                            "format": null,
                            "max_length": 1024,
                            "min_length": null,
                            "max_size": null,
                            "messages": {
                                "max_length_message": "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043c\u0435\u043d\u044c\u0448\u0435 1024 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432",
                                "wrong_data_message": "",
                                "pattern_message": ""
                            }
                        },
                        "value": "",
                        "field_info": null
                    }
                ],
                "index": 2,
                "name": "\u0421\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0438\u0441\u0438",
                "service_name": "Related Records"
            },
            {
                "elements": [
                    {
                        "column_id": "156950458513084273",
                        "column_type": "choice",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 0,
                        "is_mandatory": false,
                        "name": "\u041a\u043e\u0434 \u0437\u0430\u043a\u0440\u044b\u0442\u0438\u044f",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": {
                            "values": [
                                {
                                    "database_value": null,
                                    "display_value": "--\u041d\u0435\u0442--",
                                    "order": null
                                },
                                {
                                    "database_value": "1",
                                    "display_value": "\u0420\u0435\u0448\u0435\u043d\u043e 1 \u043b\u0438\u043d\u0438\u0435\u0439",
                                    "order": 10
                                },
                                {
                                    "database_value": "2",
                                    "display_value": "\u0420\u0435\u0448\u0435\u043d\u043e 2 \u043b\u0438\u043d\u0438\u0435\u0439",
                                    "order": 20
                                },
                                {
                                    "database_value": "3",
                                    "display_value": "\u041d\u0435 \u0440\u0435\u0448\u0435\u043d\u043e (\u043e\u0442\u043a\u0430\u0437\u0430\u043d\u043e)",
                                    "order": 30
                                },
                                {
                                    "database_value": "4",
                                    "display_value": "\u041d\u0435 \u0440\u0435\u0448\u0435\u043d\u043e (\u0441\u043e\u0437\u0434\u0430\u043d\u043e \u043e\u0448\u0438\u0431\u043e\u0447\u043d\u043e)",
                                    "order": 40
                                },
                                {
                                    "database_value": "5",
                                    "display_value": "\u041d\u0435 \u0440\u0435\u0448\u0435\u043d\u043e (\u043d\u0435\u0442 \u0440\u0435\u0430\u043a\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f)",
                                    "order": 80
                                },
                                {
                                    "database_value": "6",
                                    "display_value": "\u041d\u0435 \u0440\u0435\u0448\u0435\u043d\u043e (\u0434\u0440\u0443\u0433\u043e\u0435)",
                                    "order": 90
                                }
                            ]
                        },
                        "sys_column_name": "closure_code",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.closure_code",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": null,
                        "field_info": null
                    },
                    {
                        "client_script": ";(async () => {\n    window.s_widget_custom = window.s_widget_custom || {};\n      let currentTab = 'closure_notes';\n    s_widget.setFieldValue('tableName', s_form.getTableName());\n    s_widget.setFieldValue('recordId', s_form.sysId);\n    s_widget.setFieldValue('fieldVisible', false);\n    s_widget.setFieldValue('action', 'INIT');\n    await s_widget.serverUpdate();\n\n    const observer = new MutationObserver(mutations => {\n        try {\n          if (s_widget.getFieldValue('fieldVisible') != s_form.isVisible(currentTab)) {\n            s_widget.setFieldValue('isVisibleMainButton', !!(s_form.isVisible(currentTab) && s_widget.getFieldValue('hasAnyResponses')));\n            s_widget.setFieldValue('fieldVisible', s_form.isVisible(currentTab));\n        }\n        } catch (error) {\n         observer.disconnect(); \n        }\n    });\n    observer.observe(document.body, {\n        childList: true,\n        subtree: true\n    });\n    if (!s_widget.getFieldValue('hasAnyResponses')) {\n        return;\n    }\n    let delayTimer;\n    const store = s_widget.getFieldValue('store');\n    render('default');\n    const handleClickOutsideBox = function (event) {\n        const box = document.getElementById('quick-response-modal');\n        if (box && !box.contains(event.target) && event.target.id !== 'quick-response-main-button') {\n            s_widget.setFieldValue('isVisibleModal', false);\n            s_widget.setFieldValue('isVisibleBackButton', false);\n            s_widget_custom.goBack();\n            document.removeEventListener('click', handleClickOutsideBox, false);\n        }\n    }\n    s_widget_custom.toggleVisbility = () => {\n        if (s_widget.getFieldValue('isVisibleModal')) {\n            s_widget.setFieldValue('isVisibleModal', false);\n            document.removeEventListener('click', handleClickOutsideBox, false);\n            return;\n        }\n        s_widget.setFieldValue('isVisibleModal', true);\n        document.addEventListener('click', handleClickOutsideBox, false);\n        setTimeout(() => {\n            const searchInput = document.querySelector('.quick-response-navigation input');\n            searchInput.focus();\n        }, 0);\n    };\n    s_widget_custom.toggleFavorite = async (id) => {\n        const currentCategoryId = s_widget.getFieldValue('currentCategoryId');\n        const currentSearch = s_widget.getFieldValue('searchString');\n        const isFavorite = store.favoriteIds.includes(id);\n        s_widget.setFieldValue('chosenResponseId', id);\n        s_widget.setFieldValue('action', isFavorite ? 'DELETE_FAVORITE' : 'ADD_FAVORITE');\n        await s_widget.serverUpdate();\n        isFavorite ?\n            store.favoriteIds = store.favoriteIds.filter(el => el !== id)\n            : store.favoriteIds.push(id);\n        if (currentSearch) {\n            render('search');\n            return;\n        }\n        if (currentCategoryId) {\n            render('category');\n            return;\n        }\n        render('default');\n    };\n    s_widget_custom.openCategory = async (id) => {\n        const categoryTitle = store.categories.find(\n            category => category.id === id\n        ).title.trim();\n        s_widget.setFieldValue('currentCategoryId', id);\n        s_widget.setFieldValue('currentCategoryTitle', categoryTitle);\n        render('category');\n    };\n    s_widget_custom.goBack = async () => {\n        s_widget.setFieldValue('currentCategoryId', '');\n        s_widget.setFieldValue('currentCategoryTitle', '');\n        s_widget.setFieldValue('searchString', '');\n        render('default')\n    };\n    s_widget_custom.setComment = async (response) => {\n        const changedFields = s_form.getChanges();\n        changedFields.map(elem => {\n            elem.displayValue = s_form.getDisplayValue(elem.fieldName);\n            return elem;\n        });\n        s_widget.setFieldValue('changedFields', changedFields);\n        s_widget.setFieldValue('currentResponseId', response);\n        s_widget.setFieldValue('action', 'SET_RESPONSE');\n        await s_widget.serverUpdate();\n        const parsedAnswer = s_widget.getFieldValue('currentResponse');\n        s_form.setValue(currentTab, parsedAnswer);\n        s_widget_custom.goBack();\n        s_widget_custom.toggleVisbility();\n    };\n    s_widget_custom.search = () => {\n        clearTimeout(delayTimer);\n        delayTimer = setTimeout(async function () {\n            const currentCategoryId = s_widget.getFieldValue('currentCategoryId');\n            const currentSearch = s_widget.getFieldValue('searchString');\n            if (currentSearch) {\n                render('search');\n                return;\n            }\n            if (currentCategoryId) {\n                render('category');\n                return;\n            }\n            render('default');\n        }, 400);\n    };\n\n    function render(widgetState) {\n        setTimeout(() => {\n            switch (widgetState) {\n                case 'default':\n                    renderDefault(store);\n                    return;\n                case 'category':\n                    renderCategory(store);\n                    return;\n                case 'search':\n                    renderSearch(store);\n                    return;\n                default:\n                    return;\n            }\n        }, 0)\n    };\n})();\nconst QUICK_RESPONSE_RECORDS = 'quick-response-records';\nconst QUICK_RESPONSE_FAVORITES = 'quick-response-records-favorites';\nconst createTemplate = {\n    categories: (el) => (\n        `<div class=\"quick-response-records-category\" id='${el.id}' key='${el.id}'event-click=\"window.s_widget_custom.openCategory('${el.id}');\">\n            <div class=\"quick-response-records-category__title\">\n                ${escapeHtml(el.title)}\n            <\/div>\n            <div class=\"quick-response-records-category__open-button\"><\/div>\n        <\/div>`),\n    quickResponses: (el, isFavorite = false) => (\n        `<div class=\"quick-response-records-response\" id='${el.id}' key='${el.id}'>\n            <div class=\"quick-response-records-response-header\">\n                <div class=\"quick-response-records-response__title\" event-click=\"window.s_widget_custom.setComment('${el.id}');\">\n                    ${escapeHtml(el.title)}\n                <\/div>\n                <div class=\"quick-response-records-response-favorite-button-box\">\n                    <div class=\"quick-response-records-response__${isFavorite ? 'delete' : 'add'}-favorite\" event-click=\"window.s_widget_custom.toggleFavorite('${el.id}');\">\n                    <\/div>\n                <\/div>\n            <\/div>\n            <div class=\"quick-response-records-response__text\" event-click=\"window.s_widget_custom.setComment('${el.id}');\">\n                ${escapeHtml(el.text)}\n            <\/div>\n        <\/div>`),\n    groupHeaderTitle: (title) => `<div class=\"quick-response-records__group-header\">${escapeHtml(title)}<\/div>`,\n    plug: (text) => `<div class=\"quick-response-records__empty-search\">${escapeHtml(text)}<\/div>`,\n    border: () => '<div class=\"quick-response-records__internal-border-line\"><\/div>'\n}\nconst categoriesHeaderTitle = () => createTemplate.groupHeaderTitle(s_widget.getFieldValue('categoriesHeaderTitle'));\nconst quickResposesHeaderTitle = () => createTemplate.groupHeaderTitle(s_widget.getFieldValue('headerTitle'));\nconst favoritesHeaderTitle = () => createTemplate.groupHeaderTitle(s_widget.getFieldValue('favoriteHeaderTitle'));\nconst plug = () => createTemplate.plug(s_widget.getFieldValue('emptySearchResult'));\nconst border = () => createTemplate.border();\n\nfunction setHeader(header = '') {\n    const QUICK_RESPONSE_HEADER = 'quick-response-modal__current-category-name';\n    s_widget.removeTemplate(QUICK_RESPONSE_HEADER);\n    s_widget.addTemplate(QUICK_RESPONSE_HEADER, `<div>${escapeHtml(header)}<\/div>`, '', 'inner');\n}\n\nfunction renderDefault(store) {\n    const categories = store.categories.map(createTemplate.categories);\n    const responses = store.quickResponses.filter(({id, category}) => !category && !store.favoriteIds.includes(id)).map(elem => createTemplate.quickResponses(elem));\n    const favorites = store.quickResponses.filter(({id}) => store.favoriteIds.includes(id)).map(elem => createTemplate.quickResponses(elem, true));\n    s_widget.setFieldValue('isVisibleBackButton', false);\n    s_widget.setFieldValue('areVisibleFavorites', false);\n    setHeader();\n    s_widget.removeTemplate(QUICK_RESPONSE_RECORDS);\n    if (favorites.length) {\n        s_widget.setFieldValue('areVisibleFavorites', true);\n        favorites.unshift(favoritesHeaderTitle());\n        favorites.push(border());\n        s_widget.removeTemplate(QUICK_RESPONSE_FAVORITES);\n        s_widget.addTemplate(QUICK_RESPONSE_FAVORITES, favorites.join(''), '', 'inner');\n    }\n    if (categories.length && responses.length) {\n        categories.push(border());\n    }\n    if (categories.length) {\n        categories.unshift(categoriesHeaderTitle());\n        s_widget.addTemplate(QUICK_RESPONSE_RECORDS, categories.join(''), '', 'inner');\n    }\n    if (responses.length) {\n        responses.unshift(quickResposesHeaderTitle());\n        s_widget.addTemplate(QUICK_RESPONSE_RECORDS, responses.join(''), '', 'inner');\n    }\n}\n\nfunction renderCategory(store) {\n    const currentCategoryTitle = s_widget.getFieldValue('currentCategoryTitle');\n    const currentCategoryId = s_widget.getFieldValue('currentCategoryId');\n    s_widget.setFieldValue('isVisibleBackButton', true);\n    s_widget.setFieldValue('searchString', '');\n    s_widget.setFieldValue('areVisibleFavorites', false);\n    setHeader(currentCategoryTitle);\n    const responses = store.quickResponses.filter(({id, category}) => (category === currentCategoryId) && (!store.favoriteIds.includes(id))).map(elem => createTemplate.quickResponses(elem));\n    const favorites = store.quickResponses.filter(({id, category}) => (category === currentCategoryId) && (store.favoriteIds.includes(id))).map(elem => createTemplate.quickResponses(elem, true));\n    if (favorites.length) {\n        s_widget.setFieldValue('areVisibleFavorites', true);\n        favorites.unshift(favoritesHeaderTitle());\n        if (responses.length) {\n            favorites.push(border());\n        }\n        s_widget.removeTemplate(QUICK_RESPONSE_FAVORITES);\n        s_widget.addTemplate(QUICK_RESPONSE_FAVORITES, favorites.join(''), '', 'inner');\n    }\n    s_widget.removeTemplate(QUICK_RESPONSE_RECORDS);\n    s_widget.addTemplate(QUICK_RESPONSE_RECORDS, responses.join(''), '', 'inner');\n    return;\n}\n\nfunction renderSearch(store) {\n    const currentCategoryTitle = s_widget.getFieldValue('currentCategoryTitle');\n    const currentCategoryId = s_widget.getFieldValue('currentCategoryId');\n    s_widget.setFieldValue('areVisibleFavorites', false);\n    const currentSearch = s_widget.getFieldValue('searchString').toLowerCase();\n    if (currentCategoryTitle) {\n        const responses = store.quickResponses\n            .filter(({category, title}) => (category === currentCategoryId) && (title.toLowerCase().includes(currentSearch)))\n            .map(elem => createTemplate.quickResponses(elem, store.favoriteIds.includes(elem.id) ? true : false));\n        s_widget.removeTemplate(QUICK_RESPONSE_RECORDS);\n        setHeader(currentCategoryTitle);\n        s_widget.addTemplate(QUICK_RESPONSE_RECORDS, (responses.length ? responses.join('') : plug()), '', 'inner');\n        return;\n    }\n    const categories = store.categories\n        .filter(({title}) => title.toLowerCase().includes(currentSearch))\n        .map(createTemplate.categories);\n    const responses = store.quickResponses\n        .filter(({title}) => title.toLowerCase().includes(currentSearch))\n        .map(elem => createTemplate.quickResponses(elem, store.favoriteIds.includes(elem.id) ? true : false));\n    if (!categories.length && !responses.length) {\n        s_widget.removeTemplate(QUICK_RESPONSE_RECORDS);\n        s_widget.addTemplate(QUICK_RESPONSE_RECORDS, plug(), '', 'inner');\n        return;\n    }\n    if (categories.length) {\n        categories.unshift(categoriesHeaderTitle());\n    }\n    if (categories.length && responses.length) {\n        categories.push(border());\n    }\n    if (responses.length) {\n        responses.unshift(quickResposesHeaderTitle());\n    }\n    const quickResponseRecords = categories.concat(responses);\n    s_widget.removeTemplate(QUICK_RESPONSE_RECORDS);\n    setHeader();\n    s_widget.addTemplate(QUICK_RESPONSE_RECORDS, quickResponseRecords.join(''), '', 'inner');\n    return;\n}\n\nfunction escapeHtml(unsafe) {\n    return unsafe\n        .replace(\/&\/g, \"&amp;\")\n        .replace(\/<\/g, \"&lt;\")\n        .replace(\/>\/g, \"&gt;\")\n        .replace(\/\"\/g, \"&quot;\")\n        .replace(\/'\/g, \"&#039;\");\n}",
                        "css": ".quick-response-main-button-fast {\n    position: absolute;\ntop: -6px;\n    right: 0px;\n    z-index: 49;\n    width: 32px;\n    height: 32px;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-image: url(\"data:image\/svg+xml,%3Csvg width='18' height='20' viewBox='0 0 18 20' fill='none' xmlns='http:\/\/www.w3.org\/2000\/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M10.1652 0.902295C10.5045 1.0496 10.7061 1.40299 10.6602 1.77008L9.944 7.50005H16.5C16.8234 7.50005 17.1175 7.6871 17.2547 7.97992C17.3918 8.27274 17.3472 8.61846 17.1402 8.86687L8.80686 18.8669C8.57003 19.1511 8.17419 19.2451 7.83485 19.0978C7.4955 18.9505 7.29389 18.5971 7.33978 18.23L8.05602 12.5H1.50001C1.17666 12.5 0.882502 12.313 0.745352 12.0202C0.608202 11.7274 0.652823 11.3816 0.859826 11.1332L9.19316 1.13323C9.42999 0.849031 9.82583 0.754988 10.1652 0.902295ZM3.27921 10.8334H9.00001C9.23904 10.8334 9.46655 10.936 9.62474 11.1152C9.78293 11.2944 9.85656 11.5329 9.82691 11.7701L9.34613 15.6163L14.7208 9.16671H9.00001C8.76098 9.16671 8.53347 9.06407 8.37528 8.88488C8.21709 8.70569 8.14346 8.4672 8.17311 8.23002L8.65389 4.38376L3.27921 10.8334Z' fill='%236800B2'\/%3E%3C\/svg%3E\");\n}\n.quick-response-modal-fast {\n    position: absolute;\n    background: #FFFFFF;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.08), 0px 1px 4px rgba(0, 0, 0, 0.12);\n    border-radius: 4px;\n    top: 26px;\n    right: 0px;\n    z-index: 49;\n    width: 328px;\n    max-width: calc(100% - 12px);\n    display: flex;\n    flex-direction: column;\n}",
                        "template": "<div class=\"quick-response-wrapper\">\n    <div simple-if={data.isVisibleMainButton}>\n        <button id=\"quick-response-main-button\" class=\"quick-response-main-button-fast\" buttonType=\"unstyled\"\n                event-click=\"window.s_widget_custom.toggleVisbility();\"><\/button>\n    <\/div>\n    <div id=\"quick-response-modal\" class=\"quick-response-modal-fast\" simple-if={data.isVisibleModal}>\n        <div class=\"quick-response-header\">\n            <div class=\"quick-response-header__image\"><\/div>\n            <div class=\"quick-response-header__title\">\n                {data.headerTitle}\n            <\/div>\n        <\/div>\n        <div class=\"quick-response-navigation\">\n            <button class=\"quick-response-navigation__button\" simple-if=\"{data.isVisibleBackButton}\" buttonType=\"unstyled\"\n                    event-click=\"window.s_widget_custom.goBack();\"><\/button>\n            <string class=\"quick-response-navigation__input\" placeholder=\"{data.searchStringLabel}\" model=\"data.searchString\"\n                    event-change=\"s_widget_custom.search();\"><\/string>\n            <div class=\"quick-response-navigation__logo\"><\/div>\n        <\/div>\n        <div id=\"quick-response-modal__current-category-name\" class=\"quick-response-modal__current-category-name\"><\/div>\n        <div id=\"quick-response-records-box\" class=\"quick-response-records-box\">\n            <div simple-if={data.areVisibleFavorites} id=\"quick-response-records-favorites\" class=\"quick-response-records-favorites\"><\/div>\n            <div id=\"quick-response-records\" class=\"quick-response-records\"><\/div>\n        <\/div>\n    <\/div>\n<\/div>",
                        "widget_instance_id": "172126007995012008",
                        "options": []
                    },
                    {
                        "column_id": "156950471415807494",
                        "column_type": "text",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 1,
                        "is_mandatory": false,
                        "name": "\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0437\u0430\u043a\u0440\u044b\u0442\u0438\u0438",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": [],
                        "sys_column_name": "closure_notes",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.closure_notes",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": {
                                "max_length_message": "",
                                "wrong_data_message": "",
                                "pattern_message": ""
                            }
                        },
                        "value": "",
                        "field_info": null
                    },
                    {
                        "split": "split",
                        "title": null
                    },
                    {
                        "split": "begin_split",
                        "title": null
                    },
                    {
                        "column_id": "170896995902983568",
                        "column_type": "choice",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 2,
                        "is_mandatory": false,
                        "name": "\u041e\u0446\u0435\u043d\u043a\u0430 \u043e\u0442 \u0441\u0435\u0440\u0432\u0438\u0441 \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440\u0430",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": {
                            "values": [
                                {
                                    "database_value": null,
                                    "display_value": "--\u041d\u0435\u0442--",
                                    "order": null
                                },
                                {
                                    "database_value": "1",
                                    "display_value": "1",
                                    "order": 1
                                },
                                {
                                    "database_value": "2",
                                    "display_value": "2",
                                    "order": 2
                                },
                                {
                                    "database_value": "3",
                                    "display_value": "3",
                                    "order": 3
                                },
                                {
                                    "database_value": "4",
                                    "display_value": "4",
                                    "order": 4
                                },
                                {
                                    "database_value": "5",
                                    "display_value": "5",
                                    "order": 5
                                }
                            ]
                        },
                        "sys_column_name": "service_manager_satisfaction",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.service_manager_satisfaction",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": null,
                        "field_info": null
                    },
                    {
                        "split": "split",
                        "title": null
                    },
                    {
                        "column_id": "156950462314671782",
                        "column_type": "choice",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 3,
                        "is_mandatory": false,
                        "name": "\u041e\u0446\u0435\u043d\u043a\u0430 \u0443\u0441\u043b\u0443\u0433\u0438 \u0432 \u0446\u0435\u043b\u043e\u043c",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": {
                            "values": [
                                {
                                    "database_value": null,
                                    "display_value": "--\u041d\u0435\u0442--",
                                    "order": null
                                },
                                {
                                    "database_value": "1",
                                    "display_value": "1",
                                    "order": 10
                                },
                                {
                                    "database_value": "2",
                                    "display_value": "2",
                                    "order": 20
                                },
                                {
                                    "database_value": "3",
                                    "display_value": "3",
                                    "order": 30
                                },
                                {
                                    "database_value": "4",
                                    "display_value": "4",
                                    "order": 40
                                },
                                {
                                    "database_value": "5",
                                    "display_value": "5",
                                    "order": 50
                                }
                            ]
                        },
                        "sys_column_name": "service_satisfaction",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.service_satisfaction",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": null,
                        "field_info": null
                    },
                    {
                        "split": "end_split",
                        "title": null
                    },
                    {
                        "split": "begin_split",
                        "title": null
                    },
                    {
                        "column_id": "156950486313666452",
                        "column_type": "reference",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 4,
                        "is_mandatory": false,
                        "name": "\u041a\u0435\u043c \u0440\u0435\u0448\u0435\u043d\u043e",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": {
                            "table_id": "155931135900000084",
                            "table_name": "user",
                            "dependency_map_link": null,
                            "reference_qualifier": {
                                "is_need_request": false,
                                "condition": "(sys_db_table_id=156873090301469473)",
                                "is_fixed": true
                            },
                            "can_create": true,
                            "can_read": true
                        },
                        "sys_column_name": "resolved_by",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.resolved_by",
                        "validate": {
                            "format": null,
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": null
                        },
                        "value": null,
                        "field_info": null
                    },
                    {
                        "split": "split",
                        "title": null
                    },
                    {
                        "column_id": "156950526818999982",
                        "column_type": "datetime",
                        "dependent_on_column": null,
                        "extra_attributes": "",
                        "index": 5,
                        "is_mandatory": false,
                        "name": "\u0420\u0435\u0448\u0435\u043d\u043e \u0432",
                        "read_only": true,
                        "hidden": false,
                        "skip_in_request": null,
                        "special": [],
                        "sys_column_name": "resolved_at",
                        "sys_table_name": "itsm_request",
                        "system_name": "itsm_request.resolved_at",
                        "validate": {
                            "format": "d.m.Y H:i:s",
                            "max_length": null,
                            "min_length": null,
                            "max_size": null,
                            "messages": {
                                "max_length_message": "",
                                "wrong_data_message": "\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 \u0434\u0430\u043d\u043d\u044b\u0445",
                                "pattern_message": "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0446\u0438\u0444\u0440\u044b"
                            }
                        },
                        "value": "2025-03-03 11:59:05",
                        "field_info": null
                    },
                    {
                        "split": "end_split",
                        "title": null
                    }
                ],
                "index": 3,
                "name": "\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0437\u0430\u043a\u0440\u044b\u0442\u0438\u0438",
                "service_name": "Closure Information"
            },
            {
                "elements": [
                    {
                        "client_script": "(() => {\n    s_widget.setFieldValue('table_name', s_form.getTableName());\n    s_widget.setFieldValue('record_id', s_form.getUniqueValue());\n})();\n",
                        "css": "",
                        "template": "<rem tableName=\"{data.table_name}\" recordId =\"{data.record_id}\" \/>",
                        "widget_instance_id": "166315974411245159",
                        "options": []
                    },
                    {
                        "split": "split",
                        "title": null
                    }
                ],
                "index": 4,
                "name": "\u0410\u0442\u0440\u0438\u0431\u0443\u0442\u044b \u043c\u043e\u0434\u0435\u043b\u0438",
                "service_name": "Model Attributes"
            }
        ],
        "form_labels": [],
        "page_name": "REQ0102734 \u0422\u0435\u0441\u0442",
        "is_page_name_hidden": false,
        "table_id": "156950616617772294",
        "record_id": "174099863790054591",
        "form_id": "156993264115136526",
        "form_title": "Default",
        "entity_name": "\u0417\u0430\u043f\u0440\u043e\u0441\u044b",
        "url_table_name": "itsm_request",
        "client_scripts": [
            {
                "script": "if (!s_form.isNewRecord()) {\n  s_form.setVisible('subject', false);\n}",
                "type": "onLoad",
                "condition": "",
                "inherited": false,
                "column_id": null
            },
            {
                "script": "if (s_form.getValue('assigned_user') != s_user.userID) {\n    s_form.setReadOnly('followers_list', true)\n}",
                "type": "onLoad",
                "condition": "",
                "inherited": true,
                "column_id": null
            },
            {
                "script": "s_form.setReadOnly('assignment_group', true);",
                "type": "onLoad",
                "condition": "(assignment_groupISNOTEMPTY^assignment_group!=171034684596964981^sys_db_table_idIN156950677111866258@156950616617772294)",
                "inherited": true,
                "column_id": null
            },
            {
                "script": "const coreFieldName = 'resubmission';\ns_form.clearValue(coreFieldName);\ns_form.hideFieldMsg(coreFieldName);\n\ns_i18n.getMessage(`Date and time should be in future.`, (response) => {\n    s_form.showFieldMsg(coreFieldName, response, 'error');\n});\n",
                "type": "onChange",
                "condition": "(resubmission<=javascript: return new SimpleDateTime=OP=CP.getValue=OP=CP;^stateCHANGESTO3^resubmissionISNOTEMPTY)",
                "inherited": true,
                "column_id": "155931135900001086"
            },
            {
                "script": "const coreFieldName = 'resubmission';\ns_form.clearValue(coreFieldName);\ns_form.hideFieldMsg(coreFieldName);\n\ns_i18n.getMessage(`Date and time should be in future.`, (response) => {\n    s_form.showFieldMsg(coreFieldName, response, 'error');\n});\n",
                "type": "onChange",
                "condition": "(resubmission<=javascript: return new SimpleDateTime=OP=CP.getValue=OP=CP;)",
                "inherited": true,
                "column_id": "160026115013412828"
            },
            {
                "script": "s_form.setVisible('resolved_at', !!s_form.getValue('resolved_at'));\ns_form.setVisible('resolved_by', !!s_form.getValue('resolved_by'));",
                "type": "onLoad",
                "condition": "",
                "inherited": true,
                "column_id": null
            },
            {
                "script": "if (s_form.isNewRecord() && sessionStorage.getItem('taskData')) {\n    const storageObj = JSON.parse(sessionStorage.getItem('taskData'));\n    for (let columnName in storageObj) {\n        const tableName = s_form.getTableName();\n        if ((tableName === 'itsm_request_sc_1' || tableName === 'itsm_request_sc_2') && columnName === 'subject') continue;\n        await s_form.setValue(columnName, storageObj[columnName]);\n    }\n    const url = new URL(location.href);\n    const changeType = url.searchParams.get('changetype');\n    if (changeType) {\n        await s_form.setValue('change_type', changeType); \/\/ 1 = Standard; 2 = Normal; 3 = Emergency\n    }\n    \/\/ Clear taskData from Session Storage\n    sessionStorage.removeItem('taskData');\n}",
                "type": "onLoad",
                "condition": null,
                "inherited": true,
                "column_id": null
            },
            {
                "script": "const stateModel = {\n    \"0\": [\n        \"0\",\n        \"2\",\n        \"4\",\n        \"3\",\n        \"6\"\n    ],\n    \"1\": [\n        \"1\",\n        \"0\",\n        \"2\",\n        \"4\",\n        \"7\"\n    ],\n    \"2\": [\n        \"2\",\n        \"4\",\n        \"7\",\n        \"3\",\n        \"6\"\n    ],\n    \"3\": [\n        \"3\",\n        \"2\",\n        \"4\",\n        \"6\"\n    ],\n    \"4\": [\n        \"4\",\n        \"2\",\n        \"3\",\n        \"6\"\n    ],\n    \"6\": [\n        \"6\",\n        \"2\",\n        \"4\",\n        \"3\",\n        \"7\"\n    ],\n    \"7\": [\n        \"7\",\n        \"0\",\n        \"2\",\n        \"8\"\n    ],\n    \"8\": [\n        \"8\",\n        \"0\",\n        \"2\"\n    ],\n    \"10\": [\n        \"10\"\n    ],\n    \"-2\": [\n        \"-2\",\n        \"0\",\n        \"2\"\n    ]\n};\nconst states = stateModel[String(s_form.getValue('state'))];\nif(states){\n    s_form.clearOptions('state');\n    for(let state of states){\n        await s_form.addOption('state', state);\n    }\n }",
                "type": "onLoad",
                "condition": null,
                "inherited": true,
                "column_id": null
            },
            {
                "script": "const IN_PROGRESS = '2';\nconst COMPLETED = '7';\nconst CLOSED = '10';\nconst currentState = s_form.getValue('state');\nconst currentTable = s_form.getTableName();\nconst assignedUserMandatoryStates = [IN_PROGRESS, COMPLETED, CLOSED];\nconst isAssignedUserFilled = !!s_form.getValue('assigned_user');\nconst isAssignmentGroupFilled = !!s_form.getValue('assignment_group');\n\nif (assignedUserMandatoryStates.includes(currentState) && ['itsm_request', 'itsm_incident'].includes(currentTable)) {\n    s_form.setMandatory('assigned_user', true);\n    s_form.setMandatory('assignment_group', false);\n    return;\n}\n\nif (isAssignmentGroupFilled && isAssignedUserFilled) {\n    s_form.setMandatory('assigned_user', true);\n    s_form.setMandatory('assignment_group', true);\n    return;\n}\n\ns_form.setMandatory('assigned_user', !isAssignmentGroupFilled);\ns_form.setMandatory('assignment_group', !isAssignedUserFilled);\n",
                "type": "onChange",
                "condition": null,
                "inherited": true,
                "column_id": "156943341303994936"
            },
            {
                "script": "if (!!s_form.getValue('caller')) {\n  const employee = new SimpleRecord('employee');\n  employee.get(s_form.getValue('caller'), ()=> {\n    if (!!employee.sys_id) {\n      s_form.setValue('company', employee.company);\n    } else {\n      s_form.clearValue('company');\n    }\n  });\n} else {\n  s_form.clearValue('company');\n}",
                "type": "onChange",
                "condition": "",
                "inherited": true,
                "column_id": "156943341304220556"
            },
            {
                "script": "s_form.setVisible('faq_article', false);\nif (s_form.getValue('faq_article')) s_form.setVisible('faq_article', true);\n\n",
                "type": "onLoad",
                "condition": "",
                "inherited": true,
                "column_id": "171985928697998326"
            },
            {
                "script": "if (s_form.isNewRecord()) {\n  s_form.setValue('assignment_group', '171034684596964981');\n  if(s_form.getValue('state') == '-2') s_form.setMandatory('assigned_user', false);\n}",
                "type": "onLoad",
                "condition": "(sys_db_table_idIN156950616617772294@156950677111866258@156950641515337420@156950604414524664^sys_db_table_id!=171689032291125949)",
                "inherited": true,
                "column_id": null
            },
            {
                "script": "const roles = 'admin,ITSM_agent';\nconst satisfactionFields = ['agent_satisfaction', 'service_satisfaction'];\nconst currentState = s_form.getValue('state');\nconst currentUser = s_user.userID;\nconst COMPLETED_STATE = '7';\nconst CLOSED_STATE = '10';\n\nif (s_form.getTableName() === 'itsm_incident' && !!s_form.getValue('infrastructure_incident')) {\n    satisfactionFields.forEach(element => {\n        s_form.setVisible(element, false);\n    });\n    return;\n}\nif (currentState === COMPLETED_STATE) {\n    const calculate = new SimpleAjax('UserRolesCalculate');\n    calculate.addParam('sysparm_name', 'getRolesCongruence');\n    calculate.addParam('sysparm_userID', currentUser);\n    calculate.addParam('sysparm_userRoles', roles);\n    calculate.getXML(callback);\n\n    function callback(response) {\n        const answer = JSON.parse(response.responseXML.documentElement.getAttribute('answer'));\n        const visibleConditionsCompleted = answer.admin || s_form.getValue('caller') === currentUser;\n        satisfactionFields.forEach(element => {\n            s_form.setVisible(element, visibleConditionsCompleted);\n        });\n    }\n\n    return;\n}\nif (currentState === CLOSED_STATE) {\n    const calculate = new SimpleAjax('UserRolesCalculate');\n    calculate.addParam('sysparm_name', 'getRolesCongruence');\n    calculate.addParam('sysparm_userID', currentUser);\n    calculate.addParam('sysparm_userRoles', roles);\n    calculate.getXML(callback);\n\n    function callback(response) {\n        const answer = JSON.parse(response.responseXML.documentElement.getAttribute('answer'));\n        const visibleConditionsClosed = answer.ITSM_agent || answer.admin || s_form.getValue('caller') === currentUser;\n        satisfactionFields.forEach(element => {\n            s_form.setVisible(element, visibleConditionsClosed);\n        });\n    }\n\n    return;\n}\nsatisfactionFields.forEach(element => {\n    s_form.setVisible(element, false);\n});\n",
                "type": "onChange",
                "condition": "",
                "inherited": true,
                "column_id": "155931135900001086"
            },
            {
                "script": "const roles = 'admin,ITSM_agent';\nconst satisfactionFields = ['agent_satisfaction', 'service_satisfaction'];\nconst currentState = s_form.getValue('state');\nconst currentUser = s_user.userID;\nconst COMPLETED_STATE = '7';\nconst CLOSED_STATE = '10';\n\nif (s_form.getTableName() === 'itsm_incident' && !!s_form.getValue('infrastructure_incident')) {\n    satisfactionFields.forEach(element => {\n        s_form.setVisible(element, false);\n    });\n    return;\n}\nif (currentState === COMPLETED_STATE) {\n    const calculate = new SimpleAjax('UserRolesCalculate');\n    calculate.addParam('sysparm_name', 'getRolesCongruence');\n    calculate.addParam('sysparm_userID', currentUser);\n    calculate.addParam('sysparm_userRoles', roles);\n    calculate.getXML(callback);\n\n    function callback(response) {\n        const answer = JSON.parse(response.responseXML.documentElement.getAttribute('answer'));\n        const visibleConditionsCompleted = answer.admin || s_form.getValue('caller') === currentUser;\n        satisfactionFields.forEach(element => {\n            s_form.setVisible(element, visibleConditionsCompleted);\n        });\n    }\n\n    return;\n}\nif (currentState === CLOSED_STATE) {\n    const calculate = new SimpleAjax('UserRolesCalculate');\n    calculate.addParam('sysparm_name', 'getRolesCongruence');\n    calculate.addParam('sysparm_userID', currentUser);\n    calculate.addParam('sysparm_userRoles', roles);\n    calculate.getXML(callback);\n\n    function callback(response) {\n        const answer = JSON.parse(response.responseXML.documentElement.getAttribute('answer'));\n        const visibleConditionsClosed = answer.ITSM_agent || answer.admin || s_form.getValue('caller') === currentUser;\n        satisfactionFields.forEach(element => {\n            s_form.setVisible(element, visibleConditionsClosed);\n        });\n    }\n    \n    return;\n}\nsatisfactionFields.forEach(element => {\n    s_form.setVisible(element, false);\n});\n",
                "type": "onLoad",
                "condition": null,
                "inherited": true,
                "column_id": "155931135900001086"
            },
            {
                "script": "s_form.setReadOnly('followers_list', false);\ns_form.assigned_user = s_form.getValue('assigned_user');",
                "type": "onLoad",
                "condition": "",
                "inherited": true,
                "column_id": null
            },
            {
                "script": "if (s_form.isNewRecord() || typeof s_form.getValue('work_notes') === 'undefined' || !s_form.getValue('assigned_user')) {\n    return;\n}\n\n\n",
                "type": "onChange",
                "condition": "",
                "inherited": false,
                "column_id": "155931135900001086"
            },
            {
                "script": "const sectionClosureInformationTranslations = ['Closure Information', '\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0437\u0430\u043a\u0440\u044b\u0442\u0438\u0438'];\nconst sectionClosureInformationTitle = s_form\n    .getSectionNames()\n    .find(section => sectionClosureInformationTranslations.includes(section));\n\nconst POSTPONED = '3';\nconst CLOSED = '10';\nconst COMPLETED = '7';\nconst AUTHORIZATION = '-1';\n\nif (s_form.isNewRecord() && s_form.getTableName() !== 'itsm_spb_aho_request') {\n  s_form.setValue('assignment_group', '171034684596964981');\n  if(s_form.getValue('state') == '-2') s_form.setMandatory('assigned_user', false);\n}\n\nconst currentState = s_form.getValue('state');\nconst currentTable = s_form.getTableName();\n\nconst isHrRequestAndAuthorization = currentTable === 'itsm_hr_request' && currentState === AUTHORIZATION;\n\nconst isClosureInformationMandatory = [COMPLETED, CLOSED].includes(currentState) || isHrRequestAndAuthorization;\ns_form.setSectionDisplay(sectionClosureInformationTitle, isClosureInformationMandatory);\ns_form.setMandatory('closure_notes', isClosureInformationMandatory);\ns_form.setMandatory('closure_code', isClosureInformationMandatory);\ns_form.setVisible('closure_notes', isClosureInformationMandatory);\ns_form.setVisible('closure_code', isClosureInformationMandatory);\nif(s_form.getTableName() === 'itsm_request') s_form.setMandatory('assignment_group', true);\n\n\nconst isResubmissionVisibleAndMandatory = currentState === POSTPONED;\ns_form.setVisible('resubmission', isResubmissionVisibleAndMandatory);\ns_form.setMandatory('resubmission', isResubmissionVisibleAndMandatory);\n",
                "type": "onLoad",
                "condition": "(sys_db_table_id!=171689032291125949)",
                "inherited": true,
                "column_id": "155931135900001086"
            },
            {
                "script": "const sectionClosureInformationTranslations = ['Closure Information', '\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0437\u0430\u043a\u0440\u044b\u0442\u0438\u0438'];\nconst sectionClosureInformationTitle = s_form\n    .getSectionNames()\n    .find(section => sectionClosureInformationTranslations.includes(section));\n\nconst POSTPONED = '3';\nconst CLOSED = '10';\nconst COMPLETED = '7';\nconst INFORMATION_NEEDED = '4';\nconst EXTERNAL_PROCESSING = '6';\nconst REJECTED_BY_USER = '8';\nconst AUTHORIZATION = '-1';\n\nconst currentState = s_form.getValue('state');\nconst currentTable = s_form.getTableName();\nconst isHrRequestAndAuthorization = currentTable === 'itsm_hr_request' && currentState === AUTHORIZATION;\n\n\nconst isClosureInformationMandatory = [COMPLETED, CLOSED].includes(currentState) || isHrRequestAndAuthorization;\ns_form.setSectionDisplay(sectionClosureInformationTitle, isClosureInformationMandatory);\ns_form.setMandatory('closure_notes', isClosureInformationMandatory);\ns_form.setMandatory('closure_code', isClosureInformationMandatory);\ns_form.setVisible('closure_notes', isClosureInformationMandatory);\ns_form.setVisible('closure_code', isClosureInformationMandatory);\ns_form.setMandatory('assignment_group', isClosureInformationMandatory);\n\nconst isAdditionalCommentsMandatory = [POSTPONED, INFORMATION_NEEDED, EXTERNAL_PROCESSING, REJECTED_BY_USER].includes(currentState);\ns_form.setMandatory('additional_comments', isAdditionalCommentsMandatory);\n\nconst isResubmissionVisibleAndMandatory = currentState === POSTPONED;\ns_form.setVisible('resubmission', isResubmissionVisibleAndMandatory);\ns_form.setMandatory('resubmission', isResubmissionVisibleAndMandatory);\n",
                "type": "onChange",
                "condition": null,
                "inherited": true,
                "column_id": "155931135900001086"
            },
            {
                "script": "const table_names = [\n    'itsm_task',\n    'itsm_incident_task',\n    'itsm_incident',\n    'itsm_request',\n    'itsm_problem_task',\n    'itsm_problem',\n    'itsm_change_task',\n    'itsm_request_task'\n];\n\nif (table_names.includes(s_form.table)) {\n    if (s_form.getValue('state') === '-2' && s_form.assigned_user !== undefined && s_form.assigned_user !== s_form.getValue('assigned_user')) {\n        s_form.setValue('state', '0');\n    }\n}",
                "type": "onChange",
                "condition": "",
                "inherited": true,
                "column_id": "155931135900001080"
            },
            {
                "script": "if (s_form.isNewRecord() && (s_form.getTableName() === 'itsm_request' || s_form.getTableName() === 'itsm_incident')) {\n    const ESTP_GROUP_ID = \"171034684596964981\";\n    const userID = s_user.userID;\n\n    const relatedInquiry = s_form.getValue('related_inquiry');\n    if (relatedInquiry) {\n        s_form.setValue(\"contact_type\", \"20\");\n        return;\n    }\n\n    const userRecord = new SimpleRecord(\"sys_user_group\");\n    userRecord.addQuery(\"user_id\", userID);\n    userRecord.addQuery(\"group_id\", ESTP_GROUP_ID);\n\n    userRecord.query(() => {\n        if (userRecord.hasNext()) {\n            userRecord.next(); \n            s_form.setValue(\"contact_type\", \"10\");\n        } else {\n            s_form.setValue(\"contact_type\", \"30\");\n        }\n    });\n}\n",
                "type": "onLoad",
                "condition": "",
                "inherited": true,
                "column_id": null
            },
            {
                "script": "const roles = 'admin,service_manager,ITSM_agent';\nconst satisfactionFields = ['service_manager_satisfaction', 'service_satisfaction', 'agent_satisfaction'];\nconst currentState = s_form.getValue('state');\nconst currentUser = s_user.userID;\nconst COMPLETED_STATE = '7';\nconst CLOSED_STATE = '10';\n\nif (s_form.getTableName() === 'itsm_incident' && !!s_form.getValue('infrastructure_incident')) {\n    satisfactionFields.forEach(element => {\n        s_form.setVisible(element, false);\n    });\n    return;\n}\nif (currentState === COMPLETED_STATE) {\n    const calculate = new SimpleAjax('UserRolesCalculate');\n    calculate.addParam('sysparm_name', 'getRolesCongruence');\n    calculate.addParam('sysparm_userID', currentUser);\n    calculate.addParam('sysparm_userRoles', roles);\n    calculate.getXML(callback);\n\n    function callback(response) {\n        const answer = JSON.parse(response.responseXML.documentElement.getAttribute('answer'));\n        const visibleConditionsCompleted = answer.service_manager_satisfaction || answer.admin || s_form.getValue('caller') === currentUser;\n        satisfactionFields.forEach(element => {\n            s_form.setVisible(element, visibleConditionsCompleted);\n        });\n    }\n\n    return;\n}\nif (currentState === CLOSED_STATE) {\n    const calculate = new SimpleAjax('UserRolesCalculate');\n    calculate.addParam('sysparm_name', 'getRolesCongruence');\n    calculate.addParam('sysparm_userID', currentUser);\n    calculate.addParam('sysparm_userRoles', roles);\n    calculate.getXML(callback);\n\n    function callback(response) {\n        const answer = JSON.parse(response.responseXML.documentElement.getAttribute('answer'));\n        const visibleConditionsClosed = answer.service_manager_satisfaction || answer.admin || s_form.getValue('caller') === currentUser;\n        satisfactionFields.forEach(element => {\n            s_form.setVisible(element, visibleConditionsClosed);\n        });\n    }\n\n    return;\n}\nsatisfactionFields.forEach(element => {\n    s_form.setVisible(element, false);\n});\n",
                "type": "onChange",
                "condition": "",
                "inherited": true,
                "column_id": "155931135900001086"
            },
            {
                "script": "const roles = 'admin,service_manager,ITSM_agent';\nconst satisfactionFields = ['service_manager_satisfaction', 'service_satisfaction', 'agent_satisfaction'];\nconst currentState = s_form.getValue('state');\nconst currentUser = s_user.userID;\nconst COMPLETED_STATE = '7';\nconst CLOSED_STATE = '10';\n\nif (s_form.getTableName() === 'itsm_incident' && !!s_form.getValue('infrastructure_incident')) {\n    satisfactionFields.forEach(element => {\n        s_form.setVisible(element, false);\n    });\n    return;\n}\nif (currentState === COMPLETED_STATE) {\n    const calculate = new SimpleAjax('UserRolesCalculate');\n    calculate.addParam('sysparm_name', 'getRolesCongruence');\n    calculate.addParam('sysparm_userID', currentUser);\n    calculate.addParam('sysparm_userRoles', roles);\n    calculate.getXML(callback);\n\n    function callback(response) {\n        const answer = JSON.parse(response.responseXML.documentElement.getAttribute('answer'));\n        const visibleConditionsCompleted = answer.service_manager || answer.admin || s_form.getValue('caller') === currentUser;\n        satisfactionFields.forEach(element => {\n            s_form.setVisible(element, visibleConditionsCompleted);\n        });\n    }\n\n    return;\n}\nif (currentState === CLOSED_STATE) {\n    const calculate = new SimpleAjax('UserRolesCalculate');\n    calculate.addParam('sysparm_name', 'getRolesCongruence');\n    calculate.addParam('sysparm_userID', currentUser);\n    calculate.addParam('sysparm_userRoles', roles);\n    calculate.getXML(callback);\n\n    function callback(response) {\n        const answer = JSON.parse(response.responseXML.documentElement.getAttribute('answer'));\n        const visibleConditionsClosed = answer.service_manager || answer.admin || s_form.getValue('caller') === currentUser;\n        satisfactionFields.forEach(element => {\n            s_form.setVisible(element, visibleConditionsClosed);\n        });\n    }\n    \n    return;\n}\nsatisfactionFields.forEach(element => {\n    s_form.setVisible(element, false);\n});\n",
                "type": "onLoad",
                "condition": "",
                "inherited": true,
                "column_id": null
            },
            {
                "script": "const REQUEST_MODEL_COLUMN = 'related_request_model';\n\nif (s_form.isNewRecord() || !s_form.getValue(REQUEST_MODEL_COLUMN)) {\n    s_form.setVisible(REQUEST_MODEL_COLUMN, false);\n}",
                "type": "onLoad",
                "condition": "",
                "inherited": false,
                "column_id": "165711584116557878"
            },
            {
                "script": "if (s_form.isNewRecord()) {\n    s_form.setSectionDisplay('Model Attributes', false);\n    return;\n}\nconst tableName = s_form.getTableName();\nconst sAjax = new SimpleAjax();\nconst script = `\nconst record = new SimpleRecord('${tableName}');\nrecord.get('${s_form.getUniqueValue()}');\nsetResult(record.getReModelId());\n`;\nsAjax.runScript(script, tableName, data => {\n    s_form.setSectionDisplay('Model Attributes', data.data.result);\n});",
                "type": "onLoad",
                "condition": "",
                "inherited": false,
                "column_id": null
            },
            {
                "script": "const stateComplete = '7';\nconst state_changes = s_form.getValue('state'); \n\nif (state_changes && s_form.getValue('state') === stateComplete) {\n    const calculate = new SimpleAjax('UserRolesCalculate');\n    calculate.addParam('sysparm_name', 'hasRole');\n    calculate.addParam('sysparm_userID', s_user.userID); \n    calculate.addParam('sysparm_userRoles', 'time_cost');\n    calculate.getXML(callback);\n\n    function callback(response) {\n        const answer = response.responseXML.documentElement.getAttribute('answer');\n      console.log(answer === 'true' || answer === '1')\n        if (answer === 'true' || answer === '1') {\n            s_modal.setTitle('\u0423\u0447\u0435\u0442 \u0440\u0430\u0431\u043e\u0447\u0435\u0433\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438');\n            s_modal.renderPageTemplate('itsm_modal_portal', 'labor_costs');\n        }\n    }\n}\n",
                "type": "onChange",
                "condition": "(sys_db_table_idIN156950616617772294@156950677111866258)",
                "inherited": true,
                "column_id": "155931135900001086"
            },
            {
                "script": "const COMPLETED_STATE = '7';\nconst CLOSED_STATE = '10';\nconst CANCELED_STATE = '12';\nconst REQUIRED_STATE = '2';\n\nconst tableName = s_form.getTableName();\nconst state = s_form.getValue('state');\nconst assignedUser = s_form.getValue('assigned_user');\nconst assignmentGroup = await s_form.getValue('assignment_group'); \n\nconst current = new SimpleRecord(tableName);\ncurrent.get(s_form.getUniqueValue(), async () => {\n    const isStateChanges = String(current.state) !== state;\n    const isAssignedUserChanged = current.assigned_user !== assignedUser;\n    const isGroupChanged = current.assignment_group !== assignmentGroup; \n\n    const isRequiredState = state === REQUIRED_STATE;\n    const isExcludedState = [COMPLETED_STATE, CLOSED_STATE, CANCELED_STATE].includes(state);\n\n    const isWorkNotesMandatory = isRequiredState || \n            (isStateChanges && !isExcludedState && isAssignedUserChanged && isGroupChanged);\n    \n    s_form.setMandatory('work_notes', isWorkNotesMandatory);\n});",
                "type": "onChange",
                "condition": "(sys_db_table_idIN156950588012506154@156950641715660061@156950581217511178@156950854512888181@156950363112415683)",
                "inherited": true,
                "column_id": "155931135900001086"
            },
            {
                "script": "(function() {\n    const tabs = document.querySelectorAll('[data-test=\"tab-head\"]');\n\n    tabs.forEach(tab => {\n        if (tab.textContent.trim() === '\u0410\u0442\u0440\u0438\u0431\u0443\u0442\u044b \u043c\u043e\u0434\u0435\u043b\u0438' || tab.textContent.trim() === 'Model Attributes') {\n            tab.style.backgroundColor = 'rgba(255, 165, 0, 0.4)';\n            tab.style.color = '#2D2D2D';\n        }\n    });\n})();\n\n",
                "type": "onLoad",
                "condition": "",
                "inherited": false,
                "column_id": null
            },
            {
                "script": "if(s_form.getValue('task_confidentiality') === 1){\n    s_i18n.getMessage('Confirmation', response => {\n    s_modal.setTitle(response);\n    s_modal.setWidth(500);\n    s_modal.renderPageTemplate('itsm_modal_portal', 'confidentially');\n  });\n};",
                "type": "onChange",
                "condition": "(sys_db_table_idIN156950616617772294@156950677111866258)",
                "inherited": true,
                "column_id": "173815554490971521"
            },
            {
                "script": "const available_state = ['4','6','3','7'];\nif(available_state.includes(s_form.getValue('state'))){\ndocument.querySelector('[data-test=\"activity-feed-comment-send-button\"]').style = 'display:none';\n}else{\n  document.querySelector('[data-test=\"activity-feed-comment-send-button\"]').removeAttribute('style');\n}",
                "type": "onChange",
                "condition": "(sys_db_table_idIN156950616617772294@156950677111866258@171646988397657295@171932751798465209)",
                "inherited": true,
                "column_id": "155931135900001086"
            },
            {
                "script": "const IN_PROGRESS_STATE = '2';\nconst COMPLETED_STATE = '7';\nconst CLOSED_STATE = '10';\n\nconst currentState = s_form.getValue('state');\nconst isAssignedUserMandatory = [\n    IN_PROGRESS_STATE,\n    COMPLETED_STATE,\n    CLOSED_STATE,\n].includes(currentState);\n\nif (isAssignedUserMandatory) {\n    s_form.setMandatory('assigned_user', true);\n    s_form.setMandatory('assignment_group', true);\n    return;\n}\n\nconst isAssignedUserFilled = !!s_form.getValue('assigned_user');\nconst isAssignmentGroupFilled = !!s_form.getValue('assignment_group');\n\nif (isAssignmentGroupFilled && isAssignedUserFilled) {\n    s_form.setMandatory('assigned_user', true);\n    s_form.setMandatory('assignment_group', true);\n    return;\n}\n\n\n",
                "type": "onChange",
                "condition": "(sys_db_table_idIN156950616617772294@171932751798465209)",
                "inherited": true,
                "column_id": "155931135900001086"
            },
            {
                "script": "const ASSIGNED = '0';\nconst IN_PROGRESS = '2';\nconst COMPLETED = '7';\nconst CLOSED = '10';\nconst currentState = s_form.getValue('state');\nconst currentTable = s_form.getTableName();\nconst assignedUserMandatoryStates = [IN_PROGRESS, COMPLETED, CLOSED, ASSIGNED];\nconst isAssignedUserFilled = !!s_form.getValue('assigned_user');\nconst isAssignmentGroupFilled = !!s_form.getValue('assignment_group');\n\nif (assignedUserMandatoryStates.includes(currentState) && ['itsm_request', 'itsm_incident'].includes(currentTable)) {\n    s_form.setMandatory('assigned_user', true);\n    s_form.setMandatory('assignment_group', false);\n    return;\n}\n\nif (isAssignmentGroupFilled && isAssignedUserFilled) {\n    s_form.setMandatory('assigned_user', true);\n    s_form.setMandatory('assignment_group', true);\n    return;\n}\n\ns_form.setMandatory('assigned_user', !isAssignmentGroupFilled);\ns_form.setMandatory('assignment_group', !isAssignedUserFilled);\n",
                "type": "onChange",
                "condition": null,
                "inherited": true,
                "column_id": "155931135900001080"
            },
            {
                "script": "const fildEstpTask = s_form.getValue('first_line_task');\n  if(fildEstpTask) {\n    s_form.setVisible('faq_article', true);\n  }else {\n    s_form.clearValue('faq_article');\n    s_form.setVisible('faq_article', false);\n  }\n    ",
                "type": "onChange",
                "condition": "",
                "inherited": true,
                "column_id": "172267218090728938"
            },
            {
                "script": "    const requestId = s_form.getUniqueValue();\n    if (!requestId) return;\n\n    const requestTasks = new SimpleRecord('itsm_request_task');\n    requestTasks.addQuery('parent_id', requestId);\n    requestTasks.addQuery('state', 'NOT IN', [7, 10, 12]);\n    requestTasks.setLimit(1);\n\n    requestTasks.query(function() {\n        const rows = requestTasks.getRows();\n\n        if (rows.length > 0) {\n            addBadge();\n        }\n    });\n\n  function addBadge() {\n    const intervalId = setInterval(() => {\n        const displayNameElements = document.querySelectorAll('[data-test=\"heading-title\"]');\n        \n        if (displayNameElements.length > 1) {\n            const secondDisplayNameElement = displayNameElements[1];\n\n            let existingTag = secondDisplayNameElement.querySelector('.unfinished-tasks-tag');\n            if (!existingTag) {\n                const tag = document.createElement('span');\n                tag.className = 'unfinished-tasks-tag';\n                tag.style.cssText = `\n                    display: inline-block;\n                    background-color: rgba(0, 123, 255, 0.1);\n                    color: rgb(0, 123, 255); \n                    font-weight: bold;\n                    border: 1px solid rgb(0, 123, 255); \n                    border-radius: 5px;\n                    margin-left: 10px;\n                    padding: 2px 6px;\n                    font-size: 14px;\n                    line-height: 1.2;\n                    height: auto;\n                    vertical-align: middle;\n                `;\n                tag.textContent = '\u041d\u0435\u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u0447\u0438';\n                secondDisplayNameElement.appendChild(tag);\n            }\n            clearInterval(intervalId);\n        }\n    }, 100);\n}\n\n",
                "type": "onLoad",
                "condition": "",
                "inherited": false,
                "column_id": null
            },
            {
                "script": "s_form.setMandatory('assignment_group', true);\ns_form.getValue('state') === '-2' ? s_form.setMandatory('assigned_user', false) : s_form.setMandatory('assigned_user', true) ",
                "type": "onChange",
                "condition": "(stateVALCHANGES)",
                "inherited": false,
                "column_id": "155931135900001086"
            },
            {
                "script": "const IN_PROGRESS = '2';\nconst COMPLETED = '7';\nconst CLOSED = '10';\nconst currentState = s_form.getValue('state');\nconst currentTable = s_form.getTableName();\nconst assignedUserMandatoryStates = [IN_PROGRESS, COMPLETED, CLOSED];\nconst isAssignedUserFilled = !!s_form.getValue('assigned_user');\nconst isAssignmentGroupFilled = !!s_form.getValue('assignment_group');\n\nif (assignedUserMandatoryStates.includes(currentState) && ['itsm_request', 'itsm_incident'].includes(currentTable)) {\n    s_form.setMandatory('assigned_user', true);\n    s_form.setMandatory('assignment_group', false);\n    return;\n}\n\nif (isAssignmentGroupFilled && isAssignedUserFilled) {\n    s_form.setMandatory('assigned_user', true);\n    s_form.setMandatory('assignment_group', true);\n    return;\n}\n\ns_form.setMandatory('assignment_group', !isAssignedUserFilled);\ns_form.getValue('state') === '-2' ? s_form.setMandatory('assigned_user', false) : s_form.setMandatory('assigned_user', true) ",
                "type": "onLoad",
                "condition": "(sys_db_table_id!=171689032291125949)",
                "inherited": true,
                "column_id": null
            },
            {
                "script": "s_form.setReadOnly('vip', true);",
                "type": "onLoad",
                "condition": "",
                "inherited": true,
                "column_id": null
            },
            {
                "script": "const displayNameElements = document.querySelectorAll('[data-test=\"heading-title\"]');\nif (s_form.getValue('time_of_heroes')) {\n    if (displayNameElements && displayNameElements.length > 1) {\n        const secondDisplayNameElement = displayNameElements[1];\n\n        let existingTag = secondDisplayNameElement.querySelector('.custom-tag');\n        if (!existingTag) {\n            const greenTag = document.createElement('span');\n            greenTag.className = 'custom-tag';\n            greenTag.style.cssText = `\n                display: inline-block;\n                background-color: rgba(40, 167, 69, 0.1);\n                color: rgb(40, 167, 69);\n                font-weight: bold;\n                border: 1px solid rgb(40, 167, 69);\n                border-radius: 5px;\n                margin-left: 10px;\n                padding: 2px 6px;\n                font-size: 14px;\n                line-height: 1.2;\n                height: auto;\n                vertical-align: middle;\n            `;\n            greenTag.textContent = '\u0413\u0417-\u0412\u0428\u0413\u0423'; \n            secondDisplayNameElement.appendChild(greenTag);\n        }\n    }\n}\n",
                "type": "onLoad",
                "condition": "",
                "inherited": true,
                "column_id": null
            },
            {
                "script": "if (s_form.getValue('time_of_heroes')) {\n    const displayNameElements = document.querySelectorAll('[data-test=\"heading-title\"]');\n\n    if (displayNameElements && displayNameElements.length > 1) {\n        const secondDisplayNameElement = displayNameElements[1];\n\n        let existingTag = secondDisplayNameElement.querySelector('.custom-tag');\n        if (!existingTag) {\n            const greenTag = document.createElement('span');\n            greenTag.className = 'custom-tag';\n            greenTag.style.cssText = `\n                display: inline-block;\n                background-color: rgba(40, 167, 69, 0.1);\n                color: rgb(40, 167, 69);\n                font-weight: bold;\n                border: 1px solid rgb(40, 167, 69);\n                border-radius: 5px;\n                margin-left: 10px;\n                padding: 2px 6px;\n                font-size: 14px;\n                line-height: 1.2;\n                height: auto;\n                vertical-align: middle;\n            `;\n            greenTag.textContent = '\u0413\u0417-\u0412\u0428\u0413\u0423';\n            secondDisplayNameElement.appendChild(greenTag);\n        }\n    }\n} else {\n    const displayNameElements = document.querySelectorAll('[data-test=\"heading-title\"]');\n\n    if (displayNameElements && displayNameElements.length > 1) {\n        const secondDisplayNameElement = displayNameElements[1];\n        const existingTag = secondDisplayNameElement.querySelector('.custom-tag');\n\n        if (existingTag) {\n            existingTag.remove();\n        }\n    }\n}\n",
                "type": "onChange",
                "condition": "",
                "inherited": true,
                "column_id": "171932797194555580"
            },
            {
                "script": "if (s_form.getValue('urgency') == null) {\n   s_form.clearValue('priority');\n}\nlet check_new_priority = new SimpleRecord('itsm_dl_priority');\ncheck_new_priority.addQuery('impact', s_form.getValue('impact'));\ncheck_new_priority.addQuery('urgency', s_form.getValue('urgency'));\ncheck_new_priority.setLimit(1);\ncheck_new_priority.query(() => {\n    (check_new_priority.next())\n    s_form.setValue('priority', check_new_priority.priority);\n});",
                "type": "onChange",
                "condition": null,
                "inherited": true,
                "column_id": "155931135900001088"
            },
            {
                "script": "const displayNameElements = document.querySelectorAll('[data-test=\"heading-title\"]');\nif (s_form.getValue('admissions_committee')) {\n    if (displayNameElements && displayNameElements.length > 1) {\n        const secondDisplayNameElement = displayNameElements[1];\n\n        let existingTag = secondDisplayNameElement.querySelector('.custom-tag-yellow');\n        if (!existingTag) {\n            const yellowTag = document.createElement('span');\n            yellowTag.className = 'custom-tag-yellow';\n            yellowTag.style.cssText = `\n                display: inline-block;\n                background-color: rgba(255, 193, 7, 0.1); \n                color: rgb(255, 193, 7);\n                font-weight: bold;\n                border: 1px solid rgb(255, 193, 7);\n                border-radius: 5px;\n                margin-left: 10px;\n                padding: 2px 6px;\n                font-size: 14px;\n                line-height: 1.3;\n                height: auto;\n                vertical-align: middle;\n            `;\n            yellowTag.textContent = '\u041f\u0440\u0438\u0435\u043c\u043d\u0430\u044f \u043a\u0430\u043c\u043f\u0430\u043d\u0438\u044f'; \n            secondDisplayNameElement.appendChild(yellowTag);\n        }\n    }\n}",
                "type": "onLoad",
                "condition": "",
                "inherited": true,
                "column_id": null
            },
            {
                "script": "if (s_form.getValue('impact') == null) {\n   s_form.clearValue('priority');\n}\nlet check_new_priority = new SimpleRecord('itsm_dl_priority');\ncheck_new_priority.addQuery('impact', s_form.getValue('impact'));\ncheck_new_priority.addQuery('urgency', s_form.getValue('urgency'));\ncheck_new_priority.setLimit(1);\ncheck_new_priority.query(() => {\n   (check_new_priority.next()) \n    s_form.setValue('priority', check_new_priority.priority);\n});",
                "type": "onChange",
                "condition": "",
                "inherited": true,
                "column_id": "155931135900001089"
            },
            {
                "script": "if (s_form.getValue('admissions_committee')) {\n    const displayNameElements = document.querySelectorAll('[data-test=\"heading-title\"]');\n\n    if (displayNameElements && displayNameElements.length > 1) {\n        const secondDisplayNameElement = displayNameElements[1];\n\n        let existingTag = secondDisplayNameElement.querySelector('.custom-tag-yellow');\n        if (!existingTag) {\n            const yellowTag = document.createElement('span');\n            yellowTag.className = 'custom-tag-yellow';\n            yellowTag.style.cssText = `\n                display: inline-block;\n                background-color: rgba(255, 193, 7, 0.1);\n                color: rgb(255, 193, 7);\n                font-weight: bold;\n                border: 1px solid rgb(255, 193, 7);\n                border-radius: 5px;\n                margin-left: 10px;\n                padding: 2px 6px;\n                font-size: 14px;\n                line-height: 1.3;\n                height: auto;\n                vertical-align: middle;\n            `;\n            yellowTag.textContent = '\u041f\u0440\u0438\u0435\u043c\u043d\u0430\u044f \u043a\u0430\u043c\u043f\u0430\u043d\u0438\u044f'; \n            secondDisplayNameElement.appendChild(yellowTag);\n        }\n    }\n} else {\n    const displayNameElements = document.querySelectorAll('[data-test=\"heading-title\"]');\n\n    if (displayNameElements && displayNameElements.length > 1) {\n        const secondDisplayNameElement = displayNameElements[1];\n        \n        const existingTag = secondDisplayNameElement.querySelector('.custom-tag-yellow');\n        if (existingTag) {\n            existingTag.remove();\n        }\n    }\n}\n",
                "type": "onChange",
                "condition": "",
                "inherited": true,
                "column_id": "170853188406280613"
            },
            {
                "script": "s_form.setVisible('contact_type', false);\n\nconst tableNames = [\n    'itsm_problem',\n    'itsm_change_request',\n    'itsm_hr_request'\n];\nconst currentTable = s_form.getTableName();\n\nif (s_form.isNewRecord() && tableNames.includes(currentTable)) {\n    await s_form.setVisible('contact_type', false);\n}\n\nif (currentTable === 'itsm_vg_requests' || currentTable === 'itsm_request' || currentTable === 'itsm_incident') {\n    s_form.setVisible('contact_type', true);\n}",
                "type": "onLoad",
                "condition": "",
                "inherited": true,
                "column_id": null
            },
            {
                "script": "const intervalId = setInterval(() => {\n    const button = document.querySelector('button[data-test=\"form_button__\u043d\u0430\u0437\u043d\u0430\u0447\u0438\u0442\u044c_\u043c\u043d\u0435-ui-button\"]');\n    if (button) {\n        button.style.backgroundColor = '#FFD599';\n        clearInterval(intervalId);\n    }\n}, 100);",
                "type": "onLoad",
                "condition": "",
                "inherited": true,
                "column_id": null
            },
            {
                "script": "const EXTERNAL_PROCESSING_STATE = '6';\nconst COMPLETED_STATE = '7';\nconst REJECTED_BY_USER_STATE = '8';\nconst CLOSED_STATE = '10';\nconst IN_PROGRESS_STATE = '2';\nconst INFORMATION_NEEDED_STATE = '4';\nconst POSTPONED_STATE = '3';\nconst externalColumnsVisible = [COMPLETED_STATE, CLOSED_STATE, IN_PROGRESS_STATE, INFORMATION_NEEDED_STATE, POSTPONED_STATE, REJECTED_BY_USER_STATE];\nconst currentState = s_form.getValue('state');\nif (currentState === EXTERNAL_PROCESSING_STATE) {\n    s_form.setVisible('external_task', true);\n \ts_form.setVisible('external_company', true);\n\treturn;\n}\n\nif (!externalColumnsVisible.includes(currentState)) {\n\ts_form.setVisible('external_task', false);\n \ts_form.setVisible('external_company', false);\n\treturn;\n} \ns_form.setVisible('external_task', s_form.getValue('external_task'));\ns_form.setVisible('external_company', s_form.getValue('external_company'));",
                "type": "onLoad",
                "condition": "",
                "inherited": false,
                "column_id": null
            },
            {
                "script": "const EXTERNAL_PROCESSING_STATE = '6';\nconst COMPLETED_STATE = '7';\nconst REJECTED_BY_USER_STATE = '8';\nconst CLOSED_STATE = '10';\nconst IN_PROGRESS_STATE = '2';\nconst INFORMATION_NEEDED_STATE = '4';\nconst POSTPONED_STATE = '3';\nconst externalColumnsVisible = [COMPLETED_STATE, CLOSED_STATE, IN_PROGRESS_STATE, INFORMATION_NEEDED_STATE, POSTPONED_STATE, REJECTED_BY_USER_STATE];\nconst currentState = s_form.getValue('state');\nif (currentState === EXTERNAL_PROCESSING_STATE) {\n    s_form.setVisible('external_task', true);\n \ts_form.setVisible('external_company', true);\n\treturn;\n}\n\nif (!externalColumnsVisible.includes(currentState)) {\n\ts_form.setVisible('external_task', false);\n \ts_form.setVisible('external_company', false);\n\treturn;\n} \ns_form.setVisible('external_task', s_form.getValue('external_task'));\ns_form.setVisible('external_company', s_form.getValue('external_company'));",
                "type": "onChange",
                "condition": "",
                "inherited": false,
                "column_id": "155931135900001086"
            },
            {
                "script": "(() => {\n    if (s_form.isNewRecord()) {\n        return;\n    }\n    const sAjax = new SimpleAjax('RelatedMonitoringEventsOnITSMTasks');\n    sAjax.addParam('sysparm_name', 'getTitleForHiding');\n    sAjax.addParam('sysparm_tableName', s_form.getTableName());\n    sAjax.addParam('sysparm_recordId', s_form.getUniqueValue());\n    sAjax.getXML(response => {\n        const answer = response.responseXML.documentElement.getAttribute('answer');\n        if (answer) {\n            s_form.hideRelatedList(answer);\n        }\n    });\n})();\n",
                "type": "onLoad",
                "condition": "",
                "inherited": true,
                "column_id": null
            },
            {
                "script": "s_form.setVisible('admin_closure', false);",
                "type": "onLoad",
                "condition": "",
                "inherited": false,
                "column_id": null
            }
        ],
        "related_lists": {
            "sys_id": "159136391316280651",
            "title": "Default",
            "table_id": "156950616617772294",
            "related_elements": [
                {
                    "sys_id": "171088563291983628",
                    "related_column_id": null,
                    "related_list_id": "159136391316280651",
                    "title": "\u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
                    "related_table_id": "156950363112415683",
                    "related_table_name": "itsm_task",
                    "related_column_name": ""
                },
                {
                    "sys_id": "171088549594894658",
                    "related_column_id": "165996489806602677",
                    "related_list_id": "159136391316280651",
                    "title": "\u0418\u043d\u0434\u0438\u043a\u0430\u0446\u0438\u0438",
                    "related_table_id": "165996489807396821",
                    "related_table_name": "sys_indication",
                    "related_column_name": "task_record"
                },
                {
                    "sys_id": "169624420211716950",
                    "related_column_id": "155931135900001079",
                    "related_list_id": "159136391316280651",
                    "title": "\u0417\u0430\u0434\u0430\u0447\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432",
                    "related_table_id": "156950581217511178",
                    "related_table_name": "itsm_request_task",
                    "related_column_name": "parent_id"
                },
                {
                    "sys_id": "171693700098098466",
                    "related_column_id": "171691430395862855",
                    "related_list_id": "159136391316280651",
                    "title": "\u0422\u0440\u0443\u0434\u043e\u0437\u0430\u0442\u0440\u0430\u0442\u044b",
                    "related_table_id": "171691415093449394",
                    "related_table_name": "c_ranepa_timecard",
                    "related_column_name": "task"
                }
            ],
            "active_element_id": "169624420211716950",
            "active_related_grid_data": []
        },
        "is_clip_visible": true,
        "attachments": [],
        "dictionary": {
            "filter_titles": {
                "main_breadcrumb": "\u0412\u0441\u0435 \u0437\u0430\u043f\u0438\u0441\u0438",
                "filter_main_label": "\u041d\u043e\u0432\u044b\u0439 \u043a\u0440\u0438\u0442\u0435\u0440\u0438\u0439",
                "button_and": "\u0418",
                "button_or": "\u0418\u041b\u0418",
                "button_sort": "\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c",
                "button_group": "\u0421\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c",
                "button_save": "\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c",
                "button_run": "\u041f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c",
                "button_close": "\u0417\u0430\u043a\u0440\u044b\u0442\u044c",
                "clear_all": "\u041e\u0447\u0438\u0441\u0442\u0438\u0442\u044c \u0432\u0441\u0435",
                "conditions_must_be_met": "\u0412\u0441\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0441\u043e\u0431\u043b\u044e\u0434\u0435\u043d\u044b",
                "label_or": "\u0418\u041b\u0418",
                "order": "\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u043f\u043e \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u043c \u043f\u043e\u043b\u044f\u043c",
                "enter_value": "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435",
                "enter_date": "\u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0434\u0430\u0442\u0443",
                "a_to_z": "\u043f\u043e \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u043d\u0438\u044e",
                "z_to_a": "\u043f\u043e \u0443\u0431\u044b\u0432\u0430\u043d\u0438\u044e",
                "today": "\u0421\u0435\u0433\u043e\u0434\u043d\u044f",
                "choose_field": "\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u043f\u043e\u043b\u0435",
                "choose_operator": "\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440",
                "filters": "\u0424\u0438\u043b\u044c\u0442\u0440\u044b",
                "filter": "\u0424\u0438\u043b\u044c\u0442\u0440",
                "none_filter_name": "--\u041d\u0435\u0442--",
                "enter_name": "\u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0438\u043c\u044f",
                "keyword_search": "\u0418\u0441\u043a\u0430\u0442\u044c \u043f\u043e \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0441\u043b\u043e\u0432\u0430\u043c",
                "filter_by_state": "\u0424\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u0442\u044c: [x]",
                "group": "\u0421\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c",
                "group_sort": "\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c",
                "group_by_count": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u043d\u0438\u044e",
                "group_by_count_desc": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e \u0443\u0431\u044b\u0432\u0430\u043d\u0438\u044e",
                "group_by": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u043e \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u043d\u0438\u044e",
                "group_by_desc": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u043e \u0443\u0431\u044b\u0432\u0430\u043d\u0438\u044e",
                "ungroup": "\u0420\u0430\u0437\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c",
                "regroup": "\u041f\u0435\u0440\u0435\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c",
                "all_types": "\u0412\u0441\u0435",
                "only_fields": "\u041f\u043e\u043b\u044f",
                "only_models": "\u041c\u043e\u0434\u0435\u043b\u0438",
                "only_attributes": "\u0410\u0442\u0440\u0438\u0431\u0443\u0442\u044b",
                "no_results": "\u041d\u0435\u0442 \u0441\u043e\u0432\u043f\u0430\u0434\u0435\u043d\u0438\u0439"
            },
            "attachments_titles": {
                "no_files": {
                    "drag_n_drop_files": "\u041f\u0435\u0440\u0435\u0442\u0430\u0449\u0438\u0442\u0435 \u0444\u0430\u0439\u043b\u044b",
                    "use_buttons": "\u0418\u043b\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043a\u043b\u0430\u0432\u0438\u0448\u0438 CTRL(Cmd)+V \u0434\u043b\u044f \u0432\u0441\u0442\u0430\u0432\u043a\u0438 \u0444\u0430\u0439\u043b\u0430 \u0438\u0437 \u0431\u0443\u0444\u0435\u0440\u0430",
                    "format_maintenance": "\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0444\u0430\u0439\u043b\u043e\u0432: PNG, JPEG",
                    "max_size": "\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440: 20 Mb",
                    "no_attachments": "\u041d\u0435\u0442 \u0432\u043b\u043e\u0436\u0435\u043d\u0438\u0439"
                },
                "with_files": {
                    "download": "\u0421\u043a\u0430\u0447\u0430\u0442\u044c",
                    "delete": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c",
                    "select_all": "\u0412\u044b\u0431\u0440\u0430\u0442\u044c \u0432\u0441\u0435",
                    "add_files": "\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0444\u0430\u0439\u043b",
                    "download_all": "\u0421\u043a\u0430\u0447\u0430\u0442\u044c \u0432\u0441\u0435",
                    "cancel": "\u041e\u0442\u043c\u0435\u043d\u0438\u0442\u044c"
                },
                "drag_n_drop_files_or": "\u041f\u0435\u0440\u0435\u0442\u0430\u0449\u0438\u0442\u0435 \u0444\u0430\u0439\u043b\u044b \u0438\u043b\u0438",
                "upload_from_computer": "\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u0435 \u0441 \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0430",
                "deleted": "\u0424\u0430\u0439\u043b \u0443\u0434\u0430\u043b\u0435\u043d. \u0412\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c",
                "invalid_format": "\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 \u0444\u0430\u0439\u043b\u0430",
                "attachments": "\u0412\u043b\u043e\u0436\u0435\u043d\u0438\u044f"
            },
            "validation_field_mandatory": "\u041f\u043e\u043b\u0435 \"{column_translated_title}\" [{column_name}] \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f.",
            "document_id_titles": {
                "table_name": "\u041d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b",
                "document": "\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442",
                "button_close": "\u0417\u0430\u043a\u0440\u044b\u0442\u044c",
                "button_apply": "\u041f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c"
            },
            "data_picker_titles": {
                "apply": "\u041f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c",
                "month": "\u041c\u0435\u0441\u044f\u0446",
                "year": "\u0413\u043e\u0434",
                "today": "\u0421\u0435\u0433\u043e\u0434\u043d\u044f",
                "now": "\u0421\u0435\u0439\u0447\u0430\u0441",
                "start_date": "\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430",
                "end_date": "\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f",
                "filter_by_date": "\u0424\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u0442\u044c: \u0434\u0430\u0442\u0430",
                "filter_by_state": "\u0424\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u0442\u044c: \u0441\u0442\u0430\u0442\u0443\u0441",
                "date": "\u0414\u0430\u0442\u0430",
                "pick_a_date": "\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0434\u0430\u0442\u0443",
                "add_an_interval": "\u0423\u043a\u0430\u0437\u0430\u0442\u044c \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d",
                "start": "\u041d\u0430\u0447\u0430\u043b\u043e",
                "end": "\u041a\u043e\u043d\u0435\u0446",
                "delete_the_interval": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d"
            },
            "multi_select_titles": {
                "no_results": "\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e",
                "select_all": "\u0412\u044b\u0431\u0440\u0430\u0442\u044c \u0432\u0441\u0435",
                "enter_a_value": "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435"
            },
            "form_notification_data": {
                "not_changed": "\u0417\u0430\u043f\u0438\u0441\u044c \u043d\u0435 \u0438\u0437\u043c\u0435\u043d\u0438\u043b\u0430\u0441\u044c"
            },
            "related_lists": "\u0421\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u0441\u043f\u0438\u0441\u043a\u0438",
            "duration_titles": {
                "days": "\u0434\u043d.",
                "hours": "\u0447\u0430\u0441.",
                "minutes": "\u043c\u0438\u043d.",
                "seconds": "\u0441\u0435\u043a."
            },
            "bool": {
                "yes": "\u0414\u0430",
                "no": "\u041d\u0435\u0442"
            },
            "widget_titles": {
                "download_all": "\u0421\u043a\u0430\u0447\u0430\u0442\u044c \u0432\u0441\u0435",
                "display": "\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c",
                "download": "\u0421\u043a\u0430\u0447\u0430\u0442\u044c",
                "delete": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c",
                "add_attachments": "\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0432\u043b\u043e\u0436\u0435\u043d\u0438\u044f",
                "download_selected": "\u0421\u043a\u0430\u0447\u0430\u0442\u044c \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0435",
                "choose": "\u0412\u044b\u0431\u0440\u0430\u0442\u044c",
                "add_files": "\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0444\u0430\u0439\u043b",
                "open_attachments": "\u041e\u0442\u043a\u0440\u044b\u0442\u044c \u0432\u043b\u043e\u0436\u0435\u043d\u0438\u044f",
                "drag_n_drop_files_or": "\u041f\u0435\u0440\u0435\u0442\u0430\u0449\u0438\u0442\u0435 \u0444\u0430\u0439\u043b\u044b \u0438\u043b\u0438",
                "drag_n_drop_files": "\u041f\u0435\u0440\u0435\u0442\u0430\u0449\u0438\u0442\u0435 \u0444\u0430\u0439\u043b\u044b",
                "upload_from_computer": "\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u0435 \u0441 \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0430",
                "no_attachments": "\u041d\u0435\u0442 \u0432\u043b\u043e\u0436\u0435\u043d\u0438\u0439",
                "max_file_size_message": "\u0424\u0430\u0439\u043b \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \"128\" Mb."
            },
            "template_titles": {
                "template_message": "\u041d\u0435 \u0432\u044b\u0431\u0440\u0430\u043d\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u0430!",
                "filled": "\u0417\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043e"
            },
            "acl_blocked_titles": {
                "unavailable_data": "\u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b"
            },
            "date_time": {
                "YYYY": "\u0413\u0413\u0413\u0413",
                "MM": "\u041c\u041c",
                "M": "\u041c",
                "DD": "\u0414\u0414",
                "D": "\u0414",
                "d": "\u0434",
                "h": "\u0447",
                "m": "\u043c\u0435\u0441",
                "s": "\u0441",
                "HH": "\u0427\u0427",
                "mm": "\u043c\u043c",
                "hh": "\u0447\u0447",
                "ss": "\u0441\u0441"
            },
            "browser_utilities": {
                "unsaved_changes": "\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0432\u043d\u0435\u0441\u0435\u043d\u043d\u044b\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043d\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u0441\u044f."
            },
            "record_actions": {
                "new": "\u041d\u043e\u0432\u0430\u044f \u0437\u0430\u043f\u0438\u0441\u044c",
                "cancel": "\u041e\u0442\u043c\u0435\u043d\u0438\u0442\u044c",
                "save": "\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c"
            },
            "reference_titles": {
                "title_one_record_not_found": "\u041e\u0434\u043d\u043e \u0438\u0437 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e, \u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0434\u0440\u0443\u0433\u043e\u0435",
                "title_record_not_found": "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e, \u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0434\u0440\u0443\u0433\u043e\u0435",
                "badge_record_not_found": "\u0437\u0430\u043f\u0438\u0441\u044c \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u0430",
                "badge_unavailable_data": "\u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b",
                "badge_unavailable_title": "\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d",
                "placeholder_column_not_found": "\u041a\u043e\u043b\u043e\u043d\u043a\u0430 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u0430"
            },
            "presence": {
                "opened_by": "\u0417\u0430\u043f\u0438\u0441\u044c \u043f\u0440\u043e\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0435\u0442"
            },
            "rich_text": {
                "insert_image": "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435",
                "insert_link": "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0443",
                "bold": "\u0416\u0438\u0440\u043d\u044b\u0439",
                "italic": "\u041a\u0443\u0440\u0441\u0438\u0432",
                "underline": "\u041f\u043e\u0434\u0447\u0451\u0440\u043a\u0438\u0432\u0430\u043d\u0438\u0435",
                "strikethrough": "\u0417\u0430\u0447\u0451\u0440\u043a\u0438\u0432\u0430\u043d\u0438\u0435",
                "bulleted_list": "\u041c\u0430\u0440\u043a\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a",
                "numbered_list": "\u041d\u0443\u043c\u0435\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a",
                "quote": "\u0426\u0438\u0442\u0430\u0442\u0430",
                "enter_your_message": "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435",
                "text_formatting": "\u0424\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0435\u043a\u0441\u0442\u0430",
                "expand_sections_menu": "\u0420\u0430\u0437\u0432\u0435\u0440\u043d\u0443\u0442\u044c \u043c\u0435\u043d\u044e \u0440\u0430\u0437\u0434\u0435\u043b\u043e\u0432",
                "collapse_sections_menu": "\u0421\u0432\u0435\u0440\u043d\u0443\u0442\u044c \u043c\u0435\u043d\u044e \u0440\u0430\u0437\u0434\u0435\u043b\u043e\u0432",
                "read_only": "\u0422\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0447\u0442\u0435\u043d\u0438\u044f",
                "comments_only": "\u0422\u043e\u043b\u044c\u043a\u043e \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438",
                "heading": "\u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a",
                "subheading": "\u041f\u043e\u0434\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a",
                "normal_text": "\u041e\u0431\u044b\u0447\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442",
                "full_screen": "\u041d\u0430 \u0432\u0435\u0441\u044c \u044d\u043a\u0440\u0430\u043d",
                "exit_full_screen": "\u0423\u043c\u0435\u043d\u044c\u0448\u0438\u0442\u044c",
                "sections": "\u0420\u0430\u0437\u0434\u0435\u043b\u044b",
                "no_sections_added": "\u0420\u0430\u0437\u0434\u0435\u043b\u044b \u0435\u0449\u0451 \u043d\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b"
            }
        },
        "indicate_presence": true
    },
    "page_debug_id": "",
    "timing": {
        "before_echo": 0.5042140483856201
    }
}